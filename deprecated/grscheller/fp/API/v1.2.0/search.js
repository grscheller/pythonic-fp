window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"grscheller.fp": {"fullname": "grscheller.fp", "modulename": "grscheller.fp", "kind": "module", "doc": "<h3 id=\"package-grschellerfp-pythonic-functional-programming\">Package grscheller.fp - Pythonic Functional Programming</h3>\n\n<p>Tools to aid with functional programming in Python yet still endeavoring to\nremain Pythonic.</p>\n\n<h4 id=\"modules-and-sub-packages\">Modules and sub-packages</h4>\n\n<ul>\n<li>module grscheller.fp.err_handling: monadic maybe and either</li>\n<li>module grscheller.fp.functions: tools combine and partially apply functions</li>\n<li>module grscheller.fp.iterables: tools for iterables</li>\n<li>module grscheller.fp.lazy: lazy (non-strict) function evaluation</li>\n<li>module grscheller.fp.singletons: useful types with but one instance</li>\n<li>module grscheller.fp.state: handle state monadically</li>\n</ul>\n"}, "grscheller.fp.err_handling": {"fullname": "grscheller.fp.err_handling", "modulename": "grscheller.fp.err_handling", "kind": "module", "doc": "<h3 id=\"module-fperr_handling-monadic-error-handling\">Module fp.err_handling - monadic error handling</h3>\n\n<p>Functional data types to use in lieu of exceptions.</p>\n\n<h4 id=\"error-handling-types\">Error handling types:</h4>\n\n<ul>\n<li>class <strong>MB</strong>: Maybe (Optional) monad</li>\n<li>class <strong>XOR</strong>: Left biased Either monad</li>\n</ul>\n"}, "grscheller.fp.err_handling.MB": {"fullname": "grscheller.fp.err_handling.MB", "modulename": "grscheller.fp.err_handling", "qualname": "MB", "kind": "class", "doc": "<p>Maybe monad - class wrapping a potentially missing value.</p>\n\n<ul>\n<li>where <code>MB(value)</code> contains a possible value of type <code>~D</code></li>\n<li><code>MB()</code> semantically represent a non-existent or missing value of type <code>~D</code></li>\n<li><code>MB</code> objects are self flattening, therefore a <code>MB</code> cannot contain a MB\n<ul>\n<li><code>MB(MB(d)) == MB(d)</code></li>\n<li><code>MB(MB()) == MB()</code></li>\n</ul></li>\n<li>immutable, a <code>MB</code> does not change after being created\n<ul>\n<li>immutable semantics, map &amp; bind return new instances\n<ul>\n<li>warning: contained values need not be immutable</li>\n<li>warning: not hashable if contained value is mutable</li>\n</ul></li>\n</ul></li>\n</ul>\n", "bases": "typing.Generic[D]"}, "grscheller.fp.err_handling.MB.__init__": {"fullname": "grscheller.fp.err_handling.MB.__init__", "modulename": "grscheller.fp.err_handling", "qualname": "MB.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"s1\">&#39;D | MB[D] | Sentinel&#39;</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel</span><span class=\"p\">(</span><span class=\"s1\">&#39;MB&#39;</span><span class=\"p\">)</span></span>)</span>"}, "grscheller.fp.err_handling.MB.get": {"fullname": "grscheller.fp.err_handling.MB.get", "modulename": "grscheller.fp.err_handling", "qualname": "MB.get", "kind": "function", "doc": "<p>Return the contained value if it exists, otherwise an alternate value.</p>\n\n<ul>\n<li>alternate value must be of type <code>~D</code></li>\n<li>raises <code>ValueError</code> if an alternate value is not provided but needed</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">alt</span><span class=\"p\">:</span> <span class=\"s1\">&#39;D | Sentinel&#39;</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel</span><span class=\"p\">(</span><span class=\"s1\">&#39;MB&#39;</span><span class=\"p\">)</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;D | Never&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.MB.map": {"fullname": "grscheller.fp.err_handling.MB.map", "modulename": "grscheller.fp.err_handling", "qualname": "MB.map", "kind": "function", "doc": "<p>Map function <code>f</code> over the 0 or 1 elements of this data structure.</p>\n\n<ul>\n<li>if <code>f</code> should fail, return a MB()</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[D], U]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;MB[U]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.MB.bind": {"fullname": "grscheller.fp.err_handling.MB.bind", "modulename": "grscheller.fp.err_handling", "qualname": "MB.bind", "kind": "function", "doc": "<p>Map <code>MB</code> with function <code>f</code> and flatten.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[D], MB[U]]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;MB[U]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.MB.call": {"fullname": "grscheller.fp.err_handling.MB.call", "modulename": "grscheller.fp.err_handling", "qualname": "MB.call", "kind": "function", "doc": "<p>Return an function call wrapped in a MB</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[U], V]&#39;</span>, </span><span class=\"param\"><span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"s1\">&#39;U&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;MB[V]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.MB.lz_call": {"fullname": "grscheller.fp.err_handling.MB.lz_call", "modulename": "grscheller.fp.err_handling", "qualname": "MB.lz_call", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[U], V]&#39;</span>, </span><span class=\"param\"><span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"s1\">&#39;U&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Callable[[], MB[V]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.MB.idx": {"fullname": "grscheller.fp.err_handling.MB.idx", "modulename": "grscheller.fp.err_handling", "qualname": "MB.idx", "kind": "function", "doc": "<p>Return an indexed value wrapped in a MB</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Sequence[V]&#39;</span>, </span><span class=\"param\"><span class=\"n\">ii</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;MB[V]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.MB.lz_idx": {"fullname": "grscheller.fp.err_handling.MB.lz_idx", "modulename": "grscheller.fp.err_handling", "qualname": "MB.lz_idx", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Sequence[V]&#39;</span>, </span><span class=\"param\"><span class=\"n\">ii</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Callable[[], MB[V]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.MB.sequence": {"fullname": "grscheller.fp.err_handling.MB.sequence", "modulename": "grscheller.fp.err_handling", "qualname": "MB.sequence", "kind": "function", "doc": "<p>Sequence an indexable container of <code>MB[~D]</code></p>\n\n<ul>\n<li>if all the contained <code>MB</code> values in the container are not empty,\n<ul>\n<li>return a <code>MB</code> of a container containing the values contained</li>\n<li>otherwise return an empty <code>MB</code></li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seq_mb_d</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Sequence[MB[T]]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;MB[Sequence[T]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR": {"fullname": "grscheller.fp.err_handling.XOR", "modulename": "grscheller.fp.err_handling", "qualname": "XOR", "kind": "class", "doc": "<p>Either monad - class semantically containing either a left or a right\nvalue, but not both.</p>\n\n<ul>\n<li>implements a left biased Either Monad</li>\n<li><code>XOR(left: ~L, right: ~R)</code> produces a left <code>XOR</code> which\n<ul>\n<li>contains a value of type <code>~L</code></li>\n<li>and a potential right value of type <code>~R</code></li>\n</ul></li>\n<li><code>XOR(MB(), right)</code> produces a right <code>XOR</code></li>\n<li>in a Boolean context\n<ul>\n<li><code>True</code> if a left <code>XOR</code></li>\n<li><code>False</code> if a right <code>XOR</code></li>\n</ul></li>\n<li>two <code>XOR</code> objects compare as equal when\n<ul>\n<li>both are left values or both are right values whose values\n<ul>\n<li>are the same object</li>\n<li>compare as equal</li>\n</ul></li>\n</ul></li>\n<li>immutable, an <code>XOR</code> does not change after being created\n<ul>\n<li>immutable semantics, map &amp; bind return new instances\n<ul>\n<li>warning: contained values need not be immutable</li>\n<li>warning: not hashable if value or potential right value mutable</li>\n</ul></li>\n</ul></li>\n</ul>\n", "bases": "typing.Generic[L, R]"}, "grscheller.fp.err_handling.XOR.__init__": {"fullname": "grscheller.fp.err_handling.XOR.__init__", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"s1\">&#39;L | MB[L]&#39;</span>, </span><span class=\"param\"><span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"s1\">&#39;R&#39;</span>, </span><span class=\"param\"><span class=\"o\">/</span></span>)</span>"}, "grscheller.fp.err_handling.XOR.getLeft": {"fullname": "grscheller.fp.err_handling.XOR.getLeft", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.getLeft", "kind": "function", "doc": "<p>Get value if a left.</p>\n\n<ul>\n<li>if the <code>XOR</code> is a left, return its value</li>\n<li>if a right, return an alternate value of type ~L` if it is provided\n<ul>\n<li>alternate value provided directly</li>\n<li>or optionally provided with a MB</li>\n</ul></li>\n<li>returns a <code>MB[L]</code> for when an altLeft value is needed but not provided</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">altLeft</span><span class=\"p\">:</span> <span class=\"s1\">&#39;L | MB[L]&#39;</span> <span class=\"o\">=</span> <span class=\"n\">MB</span><span class=\"p\">()</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;MB[L]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.getRight": {"fullname": "grscheller.fp.err_handling.XOR.getRight", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.getRight", "kind": "function", "doc": "<p>Get value of <code>XOR</code> if a right, potential right value if a left.</p>\n\n<ul>\n<li>if <code>XOR</code> is a right, return its value</li>\n<li>if <code>XOR</code> is a left, return the potential right value</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;R&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.makeRight": {"fullname": "grscheller.fp.err_handling.XOR.makeRight", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.makeRight", "kind": "function", "doc": "<p>Make a right based on the <code>XOR</code>.</p>\n\n<ul>\n<li>return a right based on potential right value</li>\n<li>returns itself if already a right</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;XOR[L, R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.newRight": {"fullname": "grscheller.fp.err_handling.XOR.newRight", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.newRight", "kind": "function", "doc": "<p>Swap in a right value.</p>\n\n<ul>\n<li>returns a new instance with a new right (or potential right) value.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"s1\">&#39;R&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;XOR[L, R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.map": {"fullname": "grscheller.fp.err_handling.XOR.map", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.map", "kind": "function", "doc": "<p>Map over if a left value.</p>\n\n<ul>\n<li>if <code>XOR</code> is a left then map <code>f</code> over its value\n<ul>\n<li>if <code>f</code> successful return a left <code>XOR[S, R]</code></li>\n<li>if <code>f</code> unsuccessful return right <code>XOR[S, R]</code>\n<ul>\n<li>swallows any exceptions <code>f</code> may throw</li>\n</ul></li>\n</ul></li>\n<li>if <code>XOR</code> is a right\n<ul>\n<li>return new <code>XOR(right=self._right): XOR[S, R]</code></li>\n<li>use method <code>mapRight</code> to adjust the returned value</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[L], U]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;XOR[U, R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.mapRight": {"fullname": "grscheller.fp.err_handling.XOR.mapRight", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.mapRight", "kind": "function", "doc": "<p>Map over a right or potential right value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">g</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[R], R]&#39;</span>, </span><span class=\"param\"><span class=\"n\">altRight</span><span class=\"p\">:</span> <span class=\"s1\">&#39;R&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;XOR[L, R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.bind": {"fullname": "grscheller.fp.err_handling.XOR.bind", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.bind", "kind": "function", "doc": "<p>Flatmap - bind</p>\n\n<ul>\n<li>map over then flatten left values</li>\n<li>propagate right values</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[L], XOR[U, R]]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;XOR[U, R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.call": {"fullname": "grscheller.fp.err_handling.XOR.call", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.call", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[U], V]&#39;</span>, </span><span class=\"param\"><span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"s1\">&#39;U&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;XOR[V, MB[Exception]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.lz_call": {"fullname": "grscheller.fp.err_handling.XOR.lz_call", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.lz_call", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[U], V]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"s1\">&#39;U&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Callable[[], XOR[V, MB[Exception]]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.idx": {"fullname": "grscheller.fp.err_handling.XOR.idx", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.idx", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Sequence[V]&#39;</span>, </span><span class=\"param\"><span class=\"n\">ii</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;XOR[V, MB[Exception]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.lz_idx": {"fullname": "grscheller.fp.err_handling.XOR.lz_idx", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.lz_idx", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Sequence[V]&#39;</span>, </span><span class=\"param\"><span class=\"n\">ii</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Callable[[], XOR[V, MB[Exception]]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.err_handling.XOR.sequence": {"fullname": "grscheller.fp.err_handling.XOR.sequence", "modulename": "grscheller.fp.err_handling", "qualname": "XOR.sequence", "kind": "function", "doc": "<p>Sequence an indexable container of <code>XOR[L, R]</code></p>\n\n<ul>\n<li>if all the <code>XOR</code> values contained in the container are lefts, then\n<ul>\n<li>return an <code>XOR</code> of the same type container of all the left values</li>\n<li>setting the potential right <code>potential_right</code></li>\n</ul></li>\n<li>if at least one of the <code>XOR</code> values contained in the container is a right,\n<ul>\n<li>return a right XOR containing the right value of the first right</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">seq_xor_lr</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Sequence[XOR[L, R]]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">potential_right</span><span class=\"p\">:</span> <span class=\"s1\">&#39;R&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;XOR[Sequence[L], R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.function": {"fullname": "grscheller.fp.function", "modulename": "grscheller.fp.function", "kind": "module", "doc": "<h3 id=\"module-fpfunctional-compose-and-partially-apply-functions\">Module fp.functional - compose and partially apply functions.</h3>\n\n<p>Not a replacement for the std library's <code>functools</code> which is more about\nmodifying function behavior through decorators than functional composition\nand application.</p>\n\n<h4 id=\"fp-utilities-to-manipulate-function-arguments-return-values\">FP utilities to manipulate function arguments return values:</h4>\n\n<ul>\n<li>function <strong>swap:</strong> swap the arguments of a 2 argument function</li>\n<li>function <strong>sequenced:</strong> convert function to take a sequence of its arguments</li>\n<li>function <strong>partial:</strong> returns a partially applied function</li>\n<li>function <strong>iter_args:</strong> function returning an iterator of its arguments</li>\n</ul>\n"}, "grscheller.fp.function.swap": {"fullname": "grscheller.fp.function.swap", "modulename": "grscheller.fp.function", "qualname": "swap", "kind": "function", "doc": "<p>Swap arguments of a two argument function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[U, V], R]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Callable[[V, U], R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.function.sequenced": {"fullname": "grscheller.fp.function.sequenced", "modulename": "grscheller.fp.function", "qualname": "sequenced", "kind": "function", "doc": "<p>Convert a function with arbitrary positional arguments to one taking\na sequence of the original arguments.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[..., R]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Callable[..., R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.function.partial": {"fullname": "grscheller.fp.function.partial", "modulename": "grscheller.fp.function", "qualname": "partial", "kind": "function", "doc": "<p>Partially apply arguments to a function, left to right.</p>\n\n<ul>\n<li>type-wise the only thing guaranteed is the return value</li>\n<li>best practice is to either\n<ul>\n<li>use <code>partial</code> and <code>sequenced</code> results immediately and locally</li>\n<li>otherwise cast the results when they are created</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[..., R]&#39;</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Callable[..., R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.function.iter_args": {"fullname": "grscheller.fp.function.iter_args", "modulename": "grscheller.fp.function", "qualname": "iter_args", "kind": "function", "doc": "<p>Function returning an iterators of its arguments.</p>\n\n<ul>\n<li>useful for API's with single iterable constructors</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"s1\">&#39;A&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[A]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables": {"fullname": "grscheller.fp.iterables", "modulename": "grscheller.fp.iterables", "kind": "module", "doc": "<h3 id=\"module-fpiterables-iterator-related-tools\">Module fp.iterables - Iterator related tools</h3>\n\n<p>Library of iterator related functions and enumerations.</p>\n\n<ul>\n<li>iterables are not necessarily iterators</li>\n<li>at all times iterator protocol is assumed to be followed, that is\n<ul>\n<li>all iterators are assumed to be iterable</li>\n<li>for all iterators <code>foo</code> we assume <code>iter(foo) is foo</code></li>\n</ul></li>\n</ul>\n\n<h4 id=\"concatenating-and-merging-iterables\">Concatenating and merging iterables:</h4>\n\n<ul>\n<li>function <strong>concat</strong>: sequentially chain iterables</li>\n<li>function <strong>exhaust</strong>: shuffle together iterables until all are exhausted</li>\n<li>function <strong>merge</strong>: shuffle together iterables until one is exhausted</li>\n</ul>\n\n<hr />\n\n<h4 id=\"dropping-and-taking-values-from-an-iterable\">Dropping and taking values from an iterable:</h4>\n\n<ul>\n<li>function <strong>drop</strong>: drop first <code>n</code> values from iterable</li>\n<li>function <strong>drop_while</strong>: drop values from iterable while predicate holds</li>\n<li>function <strong>take</strong>: take up to <code>n</code> initial values from iterable</li>\n<li>function <strong>take_split</strong>: splitting out initial <code>n</code> initial values of iterable * function <strong>take_while</strong>: take values from iterable while predicate holds</li>\n<li>function <strong>take_while_split</strong>: splitting an iterable while predicate holds</li>\n</ul>\n\n<hr />\n\n<h4 id=\"reducing-and-accumulating-an-iterable\">Reducing and accumulating an iterable:</h4>\n\n<ul>\n<li>function <strong>accumulate</strong>: take iterable &amp; function, return iterator of accumulated values</li>\n<li>function <strong>foldL0</strong>: fold iterable left with a function\n<ul>\n<li>raises <code>StopIteration</code> exception if iterable is empty</li>\n</ul></li>\n<li>function <strong>foldL1</strong>: fold iterable left with a function and initial value</li>\n<li>function <strong>mbFoldL</strong>: fold iterable left with an optional initial value\n<ul>\n<li>wraps result in a <code>MB</code> monad</li>\n</ul></li>\n</ul>\n"}, "grscheller.fp.iterables.FM": {"fullname": "grscheller.fp.iterables.FM", "modulename": "grscheller.fp.iterables", "qualname": "FM", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "grscheller.fp.iterables.FM.CONCAT": {"fullname": "grscheller.fp.iterables.FM.CONCAT", "modulename": "grscheller.fp.iterables", "qualname": "FM.CONCAT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FM.CONCAT: 1&gt;"}, "grscheller.fp.iterables.FM.MERGE": {"fullname": "grscheller.fp.iterables.FM.MERGE", "modulename": "grscheller.fp.iterables", "qualname": "FM.MERGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FM.MERGE: 2&gt;"}, "grscheller.fp.iterables.FM.EXHAUST": {"fullname": "grscheller.fp.iterables.FM.EXHAUST", "modulename": "grscheller.fp.iterables", "qualname": "FM.EXHAUST", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FM.EXHAUST: 3&gt;"}, "grscheller.fp.iterables.concat": {"fullname": "grscheller.fp.iterables.concat", "modulename": "grscheller.fp.iterables", "qualname": "concat", "kind": "function", "doc": "<p>Sequentially concatenate multiple iterables together.</p>\n\n<ul>\n<li>pure Python version of standard library's <code>itertools.chain</code></li>\n<li>iterator sequentially yields each iterable until all are exhausted</li>\n<li>an infinite iterable will prevent subsequent iterables from yielding any values</li>\n<li>performant to <code>itertools.chain</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">iterables</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[D]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.merge": {"fullname": "grscheller.fp.iterables.merge", "modulename": "grscheller.fp.iterables", "qualname": "merge", "kind": "function", "doc": "<p>Shuffle together the <code>iterables</code> until one is exhausted.</p>\n\n<ul>\n<li>iterator yields until one of the iterables is exhausted</li>\n<li>if <code>yield_partials</code> is true,\n<ul>\n<li>yield any unmatched yielded values from other iterables</li>\n<li>prevents data lose\n<ul>\n<li>if any of the iterables are iterators with external references</li>\n</ul></li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">iterables</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>, </span><span class=\"param\"><span class=\"n\">yield_partials</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[D]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.exhaust": {"fullname": "grscheller.fp.iterables.exhaust", "modulename": "grscheller.fp.iterables", "qualname": "exhaust", "kind": "function", "doc": "<p>Shuffle together multiple iterables until all are exhausted.</p>\n\n<ul>\n<li>iterator yields until all iterables are exhausted</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">iterables</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[D]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.drop": {"fullname": "grscheller.fp.iterables.drop", "modulename": "grscheller.fp.iterables", "qualname": "drop", "kind": "function", "doc": "<p>Drop the next <code>n</code> values from <code>iterable</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>, </span><span class=\"param\"><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[D]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.drop_while": {"fullname": "grscheller.fp.iterables.drop_while", "modulename": "grscheller.fp.iterables", "qualname": "drop_while", "kind": "function", "doc": "<p>Drop initial values from <code>iterable</code> while predicate is true.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">predicate</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[D], bool]&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[D]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.take": {"fullname": "grscheller.fp.iterables.take", "modulename": "grscheller.fp.iterables", "qualname": "take", "kind": "function", "doc": "<p>Return an iterator of up to <code>n</code> initial values of an iterable</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>, </span><span class=\"param\"><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[D]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.take_while": {"fullname": "grscheller.fp.iterables.take_while", "modulename": "grscheller.fp.iterables", "qualname": "take_while", "kind": "function", "doc": "<p>Yield values from <code>iterable</code> while predicate is true.</p>\n\n<p><strong>Warning:</strong> risk of potential value loss if iterable is iterator with\nmultiple references.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>, </span><span class=\"param\"><span class=\"n\">pred</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[D], bool]&#39;</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[D]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.take_split": {"fullname": "grscheller.fp.iterables.take_split", "modulename": "grscheller.fp.iterables", "qualname": "take_split", "kind": "function", "doc": "<p>Same as take except also return an iterator of the remaining values.</p>\n\n<ul>\n<li>return a tuple of\n<ul>\n<li>an iterator of up to <code>n</code> initial values</li>\n<li>an iterator of the remaining vales of the <code>iterable</code></li>\n</ul></li>\n<li>best practice is not to access second iterator until first is exhausted</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>, </span><span class=\"param\"><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;tuple[Iterator[D], Iterator[D]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.take_while_split": {"fullname": "grscheller.fp.iterables.take_while_split", "modulename": "grscheller.fp.iterables", "qualname": "take_while_split", "kind": "function", "doc": "<p>Yield values from <code>iterable</code> while <code>predicate</code> is true.</p>\n\n<ul>\n<li>return a tuple of two iterators\n<ul>\n<li>first of initial values where predicate is true, followed by first to fail</li>\n<li>second of the remaining values of the iterable after first failed value</li>\n</ul></li>\n<li>best practice is not to access second iterator until first is exhausted</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">predicate</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[D], bool]&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;tuple[Iterator[D], Iterator[D]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.accumulate": {"fullname": "grscheller.fp.iterables.accumulate", "modulename": "grscheller.fp.iterables", "qualname": "accumulate", "kind": "function", "doc": "<p>Returns an iterator of accumulated values.</p>\n\n<ul>\n<li>pure Python version of standard library's <code>itertools.accumulate</code></li>\n<li>function <code>f</code> does not default to addition (for typing flexibility)</li>\n<li>begins accumulation with an optional <code>initial</code> value</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[L, D], L]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"s1\">&#39;L | NoValue&#39;</span> <span class=\"o\">=</span> <span class=\"n\">NoValue</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Iterator[L]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.foldL0": {"fullname": "grscheller.fp.iterables.foldL0", "modulename": "grscheller.fp.iterables", "qualname": "foldL0", "kind": "function", "doc": "<p>Folds an iterable left with optional initial value.</p>\n\n<ul>\n<li>traditional FP type order given for function <code>f</code></li>\n<li>if iterable empty raises StopIteration exception</li>\n<li>does not catch any exception <code>f</code> raises</li>\n<li>never returns if <code>iterable</code> generates an infinite iterator</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[D, D], D]&#39;</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;D | Never&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.foldL1": {"fullname": "grscheller.fp.iterables.foldL1", "modulename": "grscheller.fp.iterables", "qualname": "foldL1", "kind": "function", "doc": "<p>Folds an iterable left with optional initial value.</p>\n\n<ul>\n<li>traditional FP type order given for function <code>f</code></li>\n<li>does not catch any exception <code>f</code> raises</li>\n<li>never returns if <code>iterable</code> generates an infinite iterator</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[L, D], L]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"s1\">&#39;L&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;L | Never&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.mbFoldL": {"fullname": "grscheller.fp.iterables.mbFoldL", "modulename": "grscheller.fp.iterables", "qualname": "mbFoldL", "kind": "function", "doc": "<p>Folds an iterable left with optional initial value.</p>\n\n<ul>\n<li>traditional FP type order given for function <code>f</code></li>\n<li>when an initial value is not given then <code>~L = ~D</code></li>\n<li>if iterable empty and no <code>initial</code> value given, return <code>MB()</code></li>\n<li>never returns if iterable generates an infinite iterator</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Iterable[D]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[L, D], L]&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"s1\">&#39;L | NoValue&#39;</span> <span class=\"o\">=</span> <span class=\"n\">NoValue</span><span class=\"p\">()</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;MB[L]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.lazy": {"fullname": "grscheller.fp.lazy", "modulename": "grscheller.fp.lazy", "kind": "module", "doc": "<h3 id=\"module-fplazy-lazy-function-evaluations\">Module fp.lazy - lazy function evaluations</h3>\n\n<p>Delayed function evaluations, if needed, usually in some inner scope. FP tools\nfor \"non-strict\" function evaluations.</p>\n\n<h4 id=\"non-strict-delayed-function-evaluation\">Non-strict delayed function evaluation:</h4>\n\n<ul>\n<li>class <strong>Lazy:</strong> Delay evaluation of function taking &amp; returning single values</li>\n<li>function <strong>lazy:</strong> Delay evaluation of a function taking more than one value</li>\n</ul>\n"}, "grscheller.fp.lazy.Lazy": {"fullname": "grscheller.fp.lazy.Lazy", "modulename": "grscheller.fp.lazy", "qualname": "Lazy", "kind": "class", "doc": "<p>Delayed evaluation of a function mapping a value of type D</p>\n\n<p>Class instance delays the executable of a function where <code>Lazy(f, arg)</code>\nconstructs an object that can evaluate the Callable <code>f</code> with its argument\nat a later time.</p>\n\n<ul>\n<li>first argument <code>f</code> taking values of type <code>~D</code> to values of type <code>~R</code></li>\n<li>second argument <code>arg: ~D</code> is the argument to be passed to <code>f</code>\n<ul>\n<li>where the type <code>~D</code> is the <code>tuple</code> type of the argument types to <code>f</code></li>\n</ul></li>\n<li>function is evaluated when the eval method is called</li>\n<li>result is cached unless <code>pure</code> is set to <code>False</code> in <code>__init__</code> method</li>\n</ul>\n\n<p>Usually use case is to make a function \"non-strict\" by passing some of its\narguments wrapped in Lazy instances.</p>\n", "bases": "typing.Generic[D, R]"}, "grscheller.fp.lazy.Lazy.__init__": {"fullname": "grscheller.fp.lazy.Lazy.__init__", "modulename": "grscheller.fp.lazy", "qualname": "Lazy.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[D], R]&#39;</span>, </span><span class=\"param\"><span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"s1\">&#39;D&#39;</span>, </span><span class=\"param\"><span class=\"n\">pure</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "grscheller.fp.lazy.Lazy.is_evaluated": {"fullname": "grscheller.fp.lazy.Lazy.is_evaluated", "modulename": "grscheller.fp.lazy", "qualname": "Lazy.is_evaluated", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.lazy.Lazy.is_exceptional": {"fullname": "grscheller.fp.lazy.Lazy.is_exceptional", "modulename": "grscheller.fp.lazy", "qualname": "Lazy.is_exceptional", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.lazy.Lazy.is_pure": {"fullname": "grscheller.fp.lazy.Lazy.is_pure", "modulename": "grscheller.fp.lazy", "qualname": "Lazy.is_pure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.lazy.Lazy.eval": {"fullname": "grscheller.fp.lazy.Lazy.eval", "modulename": "grscheller.fp.lazy", "qualname": "Lazy.eval", "kind": "function", "doc": "<p>Evaluate function with its argument.</p>\n\n<ul>\n<li>evaluate function</li>\n<li>cache results or exceptions if <code>pure == True</code></li>\n<li>reevaluate if <code>pure == False</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.lazy.Lazy.result": {"fullname": "grscheller.fp.lazy.Lazy.result", "modulename": "grscheller.fp.lazy", "qualname": "Lazy.result", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;MB[R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.lazy.Lazy.exception": {"fullname": "grscheller.fp.lazy.Lazy.exception", "modulename": "grscheller.fp.lazy", "qualname": "Lazy.exception", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">err_handling</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"ne\">Exception</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.lazy.lazy": {"fullname": "grscheller.fp.lazy.lazy", "modulename": "grscheller.fp.lazy", "qualname": "lazy", "kind": "function", "doc": "<p>Delayed evaluation of a function with arbitrary positional arguments.</p>\n\n<p>Function returning a delayed evaluation of a function of an arbitrary number\nof positional arguments.</p>\n\n<ul>\n<li>first positional argument <code>f</code> takes a function</li>\n<li>next positional arguments are the arguments to be applied later to <code>f</code>\n<ul>\n<li><code>f</code> is evaluated when the <code>eval</code> method of the returned Lazy is called</li>\n<li><code>f</code> is evaluated only once with results cached unless <code>pure</code> is <code>False</code></li>\n<li>if <code>pure</code> is false, the arguments are reapplied to <code>f</code>\n<ul>\n<li>useful for repeating side effects</li>\n<li>when arguments are or contain shared references</li>\n</ul></li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[P, R]&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"s1\">&#39;P.args&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">pure</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;Lazy[tuple[P.args], R]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.singletons": {"fullname": "grscheller.fp.singletons", "modulename": "grscheller.fp.singletons", "kind": "module", "doc": "<h3 id=\"module-fpsingletons-collection-of-singleton-classes\">Module fp.singletons - collection of singleton classes</h3>\n\n<p>Classes permitting at most only one instantiation. Safer, but not as performant,\nthan a non-exported module level global. Difficult, but not impossible, for\na typical end-user to exploit. Different versions tailored for different use\ncases.</p>\n\n<h4 id=\"singleton-types\">Singleton types:</h4>\n\n<ul>\n<li><strong>class NoValue:</strong> singleton instance representing the absence of a value</li>\n<li><strong>Class Sentinel:</strong> singleton instances used as a \"hidden\" sentinel value</li>\n<li><strong>class Nada:</strong> singleton instance representing &amp; propagating failure</li>\n</ul>\n\n<h5 id=\"novalue-was-designed-as-a-none-replacement\"><code>NoValue</code> was designed as a None replacement</h5>\n\n<p>While <code>None</code> represents \"returned no values,\" <code>NoValue()</code> represents the absence\nof a value. Non-existing values should not be comparable to anything, even\nthemselves. End-users may use both <code>None</code> and <code>()</code> as sentinel values which\ncolliding with using either to represent \"nothingness.\" </p>\n\n<hr />\n\n<h5 id=\"sentinel-values-used-as-hidden-implementation-details\"><code>Sentinel</code> values used as hidden implementation details</h5>\n\n<ul>\n<li>Here is another implementation for Sentinel:``\n<ul>\n<li>on GitHub: <a href=\"https://github.com/taleinat/python-stdlib-sentinels\">taleinat/python-stdlib-sentinels</a></li>\n<li>on PyPI: <a href=\"https://pypi.org/project/sentinels/\">Project: Sentinels</a></li>\n<li>see: <a href=\"https://peps.python.org/pep-0661/\">PEP 661</a></li>\n</ul></li>\n</ul>\n\n<p>Initially this one was somewhat close to mine and also enabled pickling.\nSubsequently it was \"enhanced\" to allow sentinel values to be subclassed. My\nimplementation is substantially more simple, python implementation independent,\nless Gang-of-Four OOP, and more Pythonic.</p>\n\n<hr />\n\n<h5 id=\"nada-propagates-failure\"><code>Nada</code> propagates failure</h5>\n\n<p>Nada is a singleton representing &amp; propagating failure. Failure just blissfully\npropagates down \"the happy path.\" For almost everything you do with it, it just\nreturns itself. The maintainer has not used this construct enough yet to\ndetermine if it is a brilliant idea or a horrible blunder.</p>\n"}, "grscheller.fp.singletons.NoValue": {"fullname": "grscheller.fp.singletons.NoValue", "modulename": "grscheller.fp.singletons", "qualname": "NoValue", "kind": "class", "doc": "<p>Singleton class representing a missing value.</p>\n\n<ul>\n<li>similar to <code>None</code> but\n<ul>\n<li>while <code>None</code> represents \"returned no values\"</li>\n<li><code>NoValue()</code> represents the absence of a value</li>\n</ul></li>\n<li>usage\n<ul>\n<li><code>import NoValue from grscheller.fp.err_handling</code> and then\n<ul>\n<li>either use <code>NoValue()</code> directly</li>\n<li>or define <code>_noValue: Final[NoValue] = NoValue()</code> don't export it</li>\n</ul></li>\n<li>compare using <code>is</code> and <code>is not</code>\n<ul>\n<li>not <code>==</code> or <code>!=</code></li>\n<li><code>None</code> means returned no values, so <code>None == None</code> makes sense</li>\n<li>if one or both values are missing, then what is there to compare?</li>\n</ul></li>\n</ul></li>\n</ul>\n"}, "grscheller.fp.singletons.Sentinel": {"fullname": "grscheller.fp.singletons.Sentinel", "modulename": "grscheller.fp.singletons", "qualname": "Sentinel", "kind": "class", "doc": "<p>Singleton classes representing a sentinel values.</p>\n\n<ul>\n<li>intended for library code, not to be exported/shared between modules\n<ul>\n<li>otherwise some of its intended typing guarantees may be lost</li>\n</ul></li>\n<li>useful substitute for <code>None</code> as a hidden sentinel value\n<ul>\n<li>allows <code>None</code> to be stored in data structures</li>\n<li>allows end users to choose to use <code>None</code> or <code>()</code> as sentinel values</li>\n<li>always equals itself (unlike <code>noValue</code>)</li>\n</ul></li>\n<li>usage\n<ul>\n<li>import Sentinel and then either\n<ul>\n<li>define <code>_my_sentinel: Final[Sentinel] = Sentinel('my_sentinel')</code></li>\n<li>or use <code>Sentinel('my_sentinel')</code> directly</li>\n</ul></li>\n<li>compare using either\n<ul>\n<li><code>is</code> and <code>is not</code> or <code>==</code> and <code>!=</code></li>\n<li>the <code>Sentinel()</code> value always equals itself</li>\n<li>and never equals anything else, especially other sentinel values</li>\n</ul></li>\n</ul></li>\n</ul>\n"}, "grscheller.fp.singletons.Sentinel.__init__": {"fullname": "grscheller.fp.singletons.Sentinel.__init__", "modulename": "grscheller.fp.singletons", "qualname": "Sentinel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sentinel_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "grscheller.fp.singletons.Nada": {"fullname": "grscheller.fp.singletons.Nada", "modulename": "grscheller.fp.singletons", "qualname": "Nada", "kind": "class", "doc": "<p>Singleton class representing &amp; propagating failure.</p>\n\n<ul>\n<li>singleton <code>_nada: nada = Nada()</code> represents a non-existent value</li>\n<li>returns itself for arbitrary method calls</li>\n<li>returns itself if called as a Callable with arbitrary arguments</li>\n<li>interpreted as an empty container by standard Python functions</li>\n<li>warning: non-standard equality semantics\n<ul>\n<li>comparison compares true only when 2 non-missing values compare true</li>\n<li>thus <code>a == b</code> means two non-missing values compare as equal</li>\n</ul></li>\n<li>usage\n<ul>\n<li>import <code>Nada</code> and then\n<ul>\n<li>either use <code>Nada()</code> directly</li>\n<li>or define <code>_nada: Final[Nada] = Nada()</code> don't export it</li>\n</ul></li>\n<li>start propagating failure by setting a propagating value to Nada()\n<ul>\n<li>works best when working with expression</li>\n<li>failure may fail to propagate\n<ul>\n<li>for a function/method with just side effects</li>\n<li>engineer Nada() to fail to trigger side effects</li>\n</ul></li>\n</ul></li>\n<li>test for failure by comparing a result to <code>Nada()</code> itself using\n<ul>\n<li><code>is</code> and <code>is not</code></li>\n</ul></li>\n<li>propagate failure through a calculation using\n<ul>\n<li><code>==</code> and <code>!=</code></li>\n<li>the <code>Nada()</code> value never equals itself</li>\n<li>and never equals anything else</li>\n</ul></li>\n</ul></li>\n</ul>\n"}, "grscheller.fp.singletons.Nada.sentinel": {"fullname": "grscheller.fp.singletons.Nada.sentinel", "modulename": "grscheller.fp.singletons", "qualname": "Nada.sentinel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Final[grscheller.fp.singletons.Sentinel]", "default_value": "Sentinel(&#x27;Nada&#x27;)"}, "grscheller.fp.singletons.Nada.nada_get": {"fullname": "grscheller.fp.singletons.Nada.nada_get", "modulename": "grscheller.fp.singletons", "qualname": "Nada.nada_get", "kind": "function", "doc": "<p>Get an alternate value, defaults to <code>Nada()</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">alt</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Nada&#39;</span><span class=\"p\">)</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.state": {"fullname": "grscheller.fp.state", "modulename": "grscheller.fp.state", "kind": "module", "doc": "<h3 id=\"module-fpstate-state-monad\">Module fp.state - state monad</h3>\n\n<p>Handling state functionally.</p>\n\n<h4 id=\"pure-fp-state-handling-type\">Pure FP State handling type:</h4>\n\n<ul>\n<li>class <strong>State</strong>: A pure FP immutable implementation for the State Monad\n<ul>\n<li>translated to Python from the book \"Functional Programming in Scala\"\n<ul>\n<li>authors Chiusana &amp; Bjarnason</li>\n</ul></li>\n<li>using <code>bind</code> instead of <code>flatmap</code>\n<ul>\n<li>I feel <code>flatmap</code> is misleading for non-container-like monads</li>\n<li>flatmap name too long\n<ul>\n<li>without do-notation code tends to march to the right</li>\n<li><code>bind</code> for state monad is part of the user API\n<ul>\n<li>shorter to type</li>\n<li>less of just an implementation detail</li>\n</ul></li>\n</ul></li>\n</ul></li>\n</ul></li>\n</ul>\n"}, "grscheller.fp.state.State": {"fullname": "grscheller.fp.state.State", "modulename": "grscheller.fp.state", "qualname": "State", "kind": "class", "doc": "<p>Data structure generating values while propagating changes of state.</p>\n\n<ul>\n<li>class <code>State</code> represents neither a state nor (value, state) pair\n<ul>\n<li>it wraps a transformation old_state -> (value, new_state)</li>\n<li>the <code>run</code> method is this wrapped transformation</li>\n</ul></li>\n<li><code>bind</code> is just state propagating function composition\n<ul>\n<li><code>bind</code> is sometimes called \"flatmap\"</li>\n</ul></li>\n</ul>\n", "bases": "typing.Generic[S, A]"}, "grscheller.fp.state.State.__init__": {"fullname": "grscheller.fp.state.State.__init__", "modulename": "grscheller.fp.state", "qualname": "State.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">run</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[S], tuple[A, S]]&#39;</span></span>)</span>"}, "grscheller.fp.state.State.run": {"fullname": "grscheller.fp.state.State.run", "modulename": "grscheller.fp.state", "qualname": "State.run", "kind": "variable", "doc": "<p></p>\n"}, "grscheller.fp.state.State.bind": {"fullname": "grscheller.fp.state.State.bind", "modulename": "grscheller.fp.state", "qualname": "State.bind", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">g</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[A], State[S, B]]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;State[S, B]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.state.State.map": {"fullname": "grscheller.fp.state.State.map", "modulename": "grscheller.fp.state", "qualname": "State.map", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[A], B]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;State[S, B]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.state.State.map2": {"fullname": "grscheller.fp.state.State.map2", "modulename": "grscheller.fp.state", "qualname": "State.map2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sb</span><span class=\"p\">:</span> <span class=\"s1\">&#39;State[S, B]&#39;</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[A, B], C]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;State[S, C]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.state.State.both": {"fullname": "grscheller.fp.state.State.both", "modulename": "grscheller.fp.state", "qualname": "State.both", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rb</span><span class=\"p\">:</span> <span class=\"s1\">&#39;State[S, B]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;State[S, tuple[A, B]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.state.State.unit": {"fullname": "grscheller.fp.state.State.unit", "modulename": "grscheller.fp.state", "qualname": "State.unit", "kind": "function", "doc": "<p>Create a State action from a value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"s1\">&#39;B&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;State[S1, B]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.state.State.getState": {"fullname": "grscheller.fp.state.State.getState", "modulename": "grscheller.fp.state", "qualname": "State.getState", "kind": "function", "doc": "<p>Set run action to return the current state</p>\n\n<ul>\n<li>the current state is propagated unchanged</li>\n<li>current value now set to current state</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"s1\">&#39;State[S1, S1]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.state.State.setState": {"fullname": "grscheller.fp.state.State.setState", "modulename": "grscheller.fp.state", "qualname": "State.setState", "kind": "function", "doc": "<p>Manually set a state.</p>\n\n<ul>\n<li>the run action\n<ul>\n<li>ignores previous state and swaps in a new state</li>\n<li>assigns a canonically meaningless value to current value</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"s1\">&#39;S1&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;State[S1, tuple[()]]&#39;</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.state.State.modifyState": {"fullname": "grscheller.fp.state.State.modifyState", "modulename": "grscheller.fp.state", "qualname": "State.modifyState", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Callable[[S1], S1]&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;State[S1, tuple[()]]&#39;</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"grscheller.fp": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 99}, "grscheller.fp.err_handling": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 49}, "grscheller.fp.err_handling.MB": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 141}, "grscheller.fp.err_handling.MB.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "grscheller.fp.err_handling.MB.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 44}, "grscheller.fp.err_handling.MB.map": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 34}, "grscheller.fp.err_handling.MB.bind": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 14}, "grscheller.fp.err_handling.MB.call": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 10}, "grscheller.fp.err_handling.MB.lz_call": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "grscheller.fp.err_handling.MB.idx": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 10}, "grscheller.fp.err_handling.MB.lz_idx": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "grscheller.fp.err_handling.MB.sequence": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 57}, "grscheller.fp.err_handling.XOR": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 214}, "grscheller.fp.err_handling.XOR.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "grscheller.fp.err_handling.XOR.getLeft": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 76}, "grscheller.fp.err_handling.XOR.getRight": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 48}, "grscheller.fp.err_handling.XOR.makeRight": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 34}, "grscheller.fp.err_handling.XOR.newRight": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 27}, "grscheller.fp.err_handling.XOR.map": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 113}, "grscheller.fp.err_handling.XOR.mapRight": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 11}, "grscheller.fp.err_handling.XOR.bind": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 21}, "grscheller.fp.err_handling.XOR.call": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "grscheller.fp.err_handling.XOR.lz_call": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "grscheller.fp.err_handling.XOR.idx": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "grscheller.fp.err_handling.XOR.lz_idx": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "grscheller.fp.err_handling.XOR.sequence": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 99}, "grscheller.fp.function": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 107}, "grscheller.fp.function.swap": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 10}, "grscheller.fp.function.sequenced": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 19}, "grscheller.fp.function.partial": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 63}, "grscheller.fp.function.iter_args": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 24}, "grscheller.fp.iterables": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 318}, "grscheller.fp.iterables.FM": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "grscheller.fp.iterables.FM.CONCAT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.iterables.FM.MERGE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.iterables.FM.EXHAUST": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.iterables.concat": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 57}, "grscheller.fp.iterables.merge": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 72}, "grscheller.fp.iterables.exhaust": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 24}, "grscheller.fp.iterables.drop": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 14}, "grscheller.fp.iterables.drop_while": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 14}, "grscheller.fp.iterables.take": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 16}, "grscheller.fp.iterables.take_while": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 31}, "grscheller.fp.iterables.take_split": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 68}, "grscheller.fp.iterables.take_while_split": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 74}, "grscheller.fp.iterables.accumulate": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 52}, "grscheller.fp.iterables.foldL0": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 58}, "grscheller.fp.iterables.foldL1": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 50}, "grscheller.fp.iterables.mbFoldL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 68}, "grscheller.fp.lazy": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 70}, "grscheller.fp.lazy.Lazy": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 174}, "grscheller.fp.lazy.Lazy.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "grscheller.fp.lazy.Lazy.is_evaluated": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "grscheller.fp.lazy.Lazy.is_exceptional": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "grscheller.fp.lazy.Lazy.is_pure": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "grscheller.fp.lazy.Lazy.eval": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 35}, "grscheller.fp.lazy.Lazy.result": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "grscheller.fp.lazy.Lazy.exception": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "grscheller.fp.lazy.lazy": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 140}, "grscheller.fp.singletons": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 320}, "grscheller.fp.singletons.NoValue": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 155}, "grscheller.fp.singletons.Sentinel": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 193}, "grscheller.fp.singletons.Sentinel.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "grscheller.fp.singletons.Nada": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 266}, "grscheller.fp.singletons.Nada.sentinel": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.singletons.Nada.nada_get": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 13}, "grscheller.fp.state": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 147}, "grscheller.fp.state.State": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 83}, "grscheller.fp.state.State.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "grscheller.fp.state.State.run": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.state.State.bind": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "grscheller.fp.state.State.map": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "grscheller.fp.state.State.map2": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "grscheller.fp.state.State.both": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "grscheller.fp.state.State.unit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 10}, "grscheller.fp.state.State.getState": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 31}, "grscheller.fp.state.State.setState": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 41}, "grscheller.fp.state.State.modifyState": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}}, "length": 78, "save": true}, "index": {"qualname": {"root": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.state.State.__init__": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "b": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}}, "df": 10, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"2": {"docs": {"grscheller.fp.state.State.map2": {"tf": 1}}, "df": 1}, "docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.state.State.map": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.state.State.__init__": {"tf": 1}}, "df": 5}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.getRight": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State.getState": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.state.State.bind": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.state.State.both": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "z": {"docs": {"grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.Lazy.result": {"tf": 1}, "grscheller.fp.lazy.Lazy.exception": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 9}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 2, "d": {"docs": {"grscheller.fp.function.sequenced": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.function.swap": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State": {"tf": 1}, "grscheller.fp.state.State.__init__": {"tf": 1}, "grscheller.fp.state.State.run": {"tf": 1}, "grscheller.fp.state.State.bind": {"tf": 1}, "grscheller.fp.state.State.map": {"tf": 1}, "grscheller.fp.state.State.map2": {"tf": 1}, "grscheller.fp.state.State.both": {"tf": 1}, "grscheller.fp.state.State.unit": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}, "grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 11}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 14}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.newRight": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1.4142135623730951}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "m": {"docs": {"grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"0": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}}, "df": 1}, "1": {"docs": {"grscheller.fp.iterables.foldL1": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.lazy.Lazy.exception": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.lazy.Lazy.eval": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.lazy.Lazy.result": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.state.State.run": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.state.State.unit": {"tf": 1}}, "df": 1}}}}}}, "fullname": {"root": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.state.State.__init__": {"tf": 1}}, "df": 5, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.Lazy.result": {"tf": 1}, "grscheller.fp.lazy.Lazy.exception": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}, "grscheller.fp.state": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}, "grscheller.fp.state.State.__init__": {"tf": 1}, "grscheller.fp.state.State.run": {"tf": 1}, "grscheller.fp.state.State.bind": {"tf": 1}, "grscheller.fp.state.State.map": {"tf": 1}, "grscheller.fp.state.State.map2": {"tf": 1}, "grscheller.fp.state.State.both": {"tf": 1}, "grscheller.fp.state.State.unit": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}, "grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 78}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.getRight": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State.getState": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.Lazy.result": {"tf": 1}, "grscheller.fp.lazy.Lazy.exception": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}, "grscheller.fp.state": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}, "grscheller.fp.state.State.__init__": {"tf": 1}, "grscheller.fp.state.State.run": {"tf": 1}, "grscheller.fp.state.State.bind": {"tf": 1}, "grscheller.fp.state.State.map": {"tf": 1}, "grscheller.fp.state.State.map2": {"tf": 1}, "grscheller.fp.state.State.both": {"tf": 1}, "grscheller.fp.state.State.unit": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}, "grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 78}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}}, "df": 5}}}}}}}, "m": {"docs": {"grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"0": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}}, "df": 1}, "1": {"docs": {"grscheller.fp.iterables.foldL1": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 25}}, "x": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.lazy.Lazy.exception": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.lazy.Lazy.eval": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 25}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}}, "df": 10, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"2": {"docs": {"grscheller.fp.state.State.map2": {"tf": 1}}, "df": 1}, "docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.state.State.map": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.state.State.__init__": {"tf": 1}}, "df": 5}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 18}}}}}}}}, "s": {"docs": {"grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.state.State.bind": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.state.State.both": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "z": {"docs": {"grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.result": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.exception": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}}, "df": 10}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 2, "d": {"docs": {"grscheller.fp.function.sequenced": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.function.swap": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 7}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.run": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.bind": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.map": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.map2": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.both": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.unit": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.getState": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.setState": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.modifyState": {"tf": 1.4142135623730951}}, "df": 12}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 14}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.newRight": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1.4142135623730951}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.lazy.Lazy.result": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.state.State.run": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.state.State.unit": {"tf": 1}}, "df": 1}}}}}}, "annotation": {"root": {"docs": {"grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "p": {"docs": {"grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 1}}}}}}}}}}, "default_value": {"root": {"1": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}}, "df": 1}, "2": {"docs": {"grscheller.fp.iterables.FM.MERGE": {"tf": 1}}, "df": 1}, "3": {"docs": {"grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 1}, "docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "m": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.FM.MERGE": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"2": {"7": {"docs": {"grscheller.fp.singletons.Nada.sentinel": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.singletons.Nada.sentinel": {"tf": 1}}, "df": 1}}}}}}, "signature": {"root": {"3": {"9": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 2}, "grscheller.fp.err_handling.MB.get": {"tf": 2.449489742783178}, "grscheller.fp.err_handling.MB.map": {"tf": 2}, "grscheller.fp.err_handling.MB.bind": {"tf": 2}, "grscheller.fp.err_handling.MB.call": {"tf": 2.449489742783178}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 2.449489742783178}, "grscheller.fp.err_handling.MB.idx": {"tf": 2}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 2}, "grscheller.fp.err_handling.MB.sequence": {"tf": 2}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 2}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 2}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 2}, "grscheller.fp.err_handling.XOR.map": {"tf": 2}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 2.449489742783178}, "grscheller.fp.err_handling.XOR.bind": {"tf": 2}, "grscheller.fp.err_handling.XOR.call": {"tf": 2.449489742783178}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 2.449489742783178}, "grscheller.fp.err_handling.XOR.idx": {"tf": 2}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 2}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 2.449489742783178}, "grscheller.fp.function.swap": {"tf": 2}, "grscheller.fp.function.sequenced": {"tf": 2}, "grscheller.fp.function.partial": {"tf": 2}, "grscheller.fp.function.iter_args": {"tf": 2}, "grscheller.fp.iterables.concat": {"tf": 2}, "grscheller.fp.iterables.merge": {"tf": 2}, "grscheller.fp.iterables.exhaust": {"tf": 2}, "grscheller.fp.iterables.drop": {"tf": 2}, "grscheller.fp.iterables.drop_while": {"tf": 2.449489742783178}, "grscheller.fp.iterables.take": {"tf": 2}, "grscheller.fp.iterables.take_while": {"tf": 2.449489742783178}, "grscheller.fp.iterables.take_split": {"tf": 2}, "grscheller.fp.iterables.take_while_split": {"tf": 2.449489742783178}, "grscheller.fp.iterables.accumulate": {"tf": 2.8284271247461903}, "grscheller.fp.iterables.foldL0": {"tf": 2.449489742783178}, "grscheller.fp.iterables.foldL1": {"tf": 2.8284271247461903}, "grscheller.fp.iterables.mbFoldL": {"tf": 2.8284271247461903}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 2}, "grscheller.fp.lazy.Lazy.result": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.lazy": {"tf": 2.449489742783178}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.bind": {"tf": 2}, "grscheller.fp.state.State.map": {"tf": 2}, "grscheller.fp.state.State.map2": {"tf": 2.449489742783178}, "grscheller.fp.state.State.both": {"tf": 2}, "grscheller.fp.state.State.unit": {"tf": 2}, "grscheller.fp.state.State.getState": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.setState": {"tf": 2}, "grscheller.fp.state.State.modifyState": {"tf": 2}}, "df": 52}, "docs": {}, "df": 0}, "docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 5.5677643628300215}, "grscheller.fp.err_handling.MB.get": {"tf": 6.4031242374328485}, "grscheller.fp.err_handling.MB.map": {"tf": 4.898979485566356}, "grscheller.fp.err_handling.MB.bind": {"tf": 4.898979485566356}, "grscheller.fp.err_handling.MB.call": {"tf": 5.477225575051661}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 5.477225575051661}, "grscheller.fp.err_handling.MB.idx": {"tf": 5.291502622129181}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 5.291502622129181}, "grscheller.fp.err_handling.MB.sequence": {"tf": 4.47213595499958}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 5.477225575051661}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 5.830951894845301}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 3.7416573867739413}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 3.7416573867739413}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 4.898979485566356}, "grscheller.fp.err_handling.XOR.map": {"tf": 4.898979485566356}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 5.830951894845301}, "grscheller.fp.err_handling.XOR.bind": {"tf": 4.898979485566356}, "grscheller.fp.err_handling.XOR.call": {"tf": 5.477225575051661}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 5.656854249492381}, "grscheller.fp.err_handling.XOR.idx": {"tf": 5.291502622129181}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 5.291502622129181}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 5.656854249492381}, "grscheller.fp.function.swap": {"tf": 4.47213595499958}, "grscheller.fp.function.sequenced": {"tf": 4.47213595499958}, "grscheller.fp.function.partial": {"tf": 5.477225575051661}, "grscheller.fp.function.iter_args": {"tf": 4.69041575982343}, "grscheller.fp.iterables.concat": {"tf": 4.69041575982343}, "grscheller.fp.iterables.merge": {"tf": 6}, "grscheller.fp.iterables.exhaust": {"tf": 4.69041575982343}, "grscheller.fp.iterables.drop": {"tf": 5.744562646538029}, "grscheller.fp.iterables.drop_while": {"tf": 6.164414002968976}, "grscheller.fp.iterables.take": {"tf": 5.744562646538029}, "grscheller.fp.iterables.take_while": {"tf": 5.916079783099616}, "grscheller.fp.iterables.take_split": {"tf": 5.744562646538029}, "grscheller.fp.iterables.take_while_split": {"tf": 6.164414002968976}, "grscheller.fp.iterables.accumulate": {"tf": 7.681145747868608}, "grscheller.fp.iterables.foldL0": {"tf": 6}, "grscheller.fp.iterables.foldL1": {"tf": 7.0710678118654755}, "grscheller.fp.iterables.mbFoldL": {"tf": 7.280109889280518}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 6.164414002968976}, "grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 3.4641016151377544}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 3.4641016151377544}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 3.4641016151377544}, "grscheller.fp.lazy.Lazy.eval": {"tf": 3.4641016151377544}, "grscheller.fp.lazy.Lazy.result": {"tf": 3.7416573867739413}, "grscheller.fp.lazy.Lazy.exception": {"tf": 5.385164807134504}, "grscheller.fp.lazy.lazy": {"tf": 7}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 3.4641016151377544}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 5.916079783099616}, "grscheller.fp.state.State.__init__": {"tf": 3.7416573867739413}, "grscheller.fp.state.State.bind": {"tf": 4.898979485566356}, "grscheller.fp.state.State.map": {"tf": 4.898979485566356}, "grscheller.fp.state.State.map2": {"tf": 5.830951894845301}, "grscheller.fp.state.State.both": {"tf": 4.898979485566356}, "grscheller.fp.state.State.unit": {"tf": 4.47213595499958}, "grscheller.fp.state.State.getState": {"tf": 3.3166247903554}, "grscheller.fp.state.State.setState": {"tf": 4.58257569495584}, "grscheller.fp.state.State.modifyState": {"tf": 4.58257569495584}}, "df": 58, "v": {"docs": {"grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1.4142135623730951}}, "df": 8}, "m": {"docs": {}, "df": 0, "b": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.lazy.Lazy.exception": {"tf": 1}}, "df": 5, "[": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1}}, "df": 1}, "u": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1.4142135623730951}}, "df": 2}, "v": {"docs": {"grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {"grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}}, "df": 4}}}}}}}}}, "r": {"docs": {"grscheller.fp.lazy.Lazy.result": {"tf": 1}}, "df": 1}}}}, "s": {"1": {"docs": {"grscheller.fp.state.State.getState": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}, "grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 3}, "docs": {"grscheller.fp.state.State.__init__": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.MB.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.Lazy.result": {"tf": 1}, "grscheller.fp.lazy.Lazy.exception": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}, "grscheller.fp.state.State.bind": {"tf": 1}, "grscheller.fp.state.State.map": {"tf": 1}, "grscheller.fp.state.State.map2": {"tf": 1}, "grscheller.fp.state.State.both": {"tf": 1}}, "df": 21}}, "q": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "v": {"docs": {"grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}}, "df": 4}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"1": {"docs": {"grscheller.fp.state.State.unit": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}, "grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 4}, "docs": {"grscheller.fp.state.State.bind": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.map": {"tf": 1}, "grscheller.fp.state.State.map2": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.both": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "b": {"docs": {"grscheller.fp.state.State.map2": {"tf": 1}}, "df": 1}}, "a": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.7320508075688772}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.mbFoldL": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.Sentinel.__init__": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.state.State.map": {"tf": 1}, "grscheller.fp.state.State.map2": {"tf": 1}, "grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 20, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"grscheller.fp.lazy.Lazy.exception": {"tf": 1}}, "df": 1}}, "c": {"docs": {"grscheller.fp.state.State.map2": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1.4142135623730951}, "grscheller.fp.function.partial": {"tf": 1.4142135623730951}}, "df": 6, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}}, "df": 7}, "u": {"docs": {"grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}}, "df": 5}, "l": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 5}, "r": {"docs": {"grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}}, "df": 1}, "v": {"docs": {"grscheller.fp.function.swap": {"tf": 1}}, "df": 1}, "s": {"1": {"docs": {"grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 1}, "docs": {"grscheller.fp.state.State.__init__": {"tf": 1}}, "df": 1}, "a": {"docs": {"grscheller.fp.state.State.bind": {"tf": 1}, "grscheller.fp.state.State.map": {"tf": 1}, "grscheller.fp.state.State.map2": {"tf": 1}}, "df": 3}}, "p": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "i": {"docs": {"grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}}, "df": 1}, "d": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 9}, "l": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 10, "s": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 3}, "[": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 13}}}}}}}}}}, "l": {"docs": {"grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL1": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.mbFoldL": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {"grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.7320508075688772}, "grscheller.fp.function.swap": {"tf": 1.4142135623730951}, "grscheller.fp.function.sequenced": {"tf": 1.4142135623730951}, "grscheller.fp.function.partial": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}}, "df": 13, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.__init__": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.state.State.__init__": {"tf": 1}}, "df": 1}}, "b": {"docs": {"grscheller.fp.state.State.both": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}}, "df": 3}, "u": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1.4142135623730951}}, "df": 2}, "v": {"docs": {"grscheller.fp.err_handling.XOR.call": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "g": {"docs": {"grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.state.State.bind": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.lazy.Lazy.exception": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.take_while": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {"grscheller.fp.state.State.bind": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.map": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.map2": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.both": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.unit": {"tf": 1.7320508075688772}}, "df": 5, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 10}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}, "grscheller.fp.state.State.modifyState": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {"grscheller.fp.state.State.__init__": {"tf": 1}, "grscheller.fp.state.State.both": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy.__init__": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.lazy.Lazy.exception": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.lazy.Lazy.exception": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.lazy.Lazy.exception": {"tf": 1}}, "df": 1}}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 2}, "l": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 1}, "s": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"grscheller.fp.iterables.FM": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}}}, "doc": {"root": {"0": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}}, "df": 1}, "1": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}}, "df": 1}, "2": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2}, "6": {"6": {"1": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"grscheller.fp": {"tf": 4.795831523312719}, "grscheller.fp.err_handling": {"tf": 4.358898943540674}, "grscheller.fp.err_handling.MB": {"tf": 7.681145747868608}, "grscheller.fp.err_handling.MB.__init__": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.MB.get": {"tf": 3.872983346207417}, "grscheller.fp.err_handling.MB.map": {"tf": 3.7416573867739413}, "grscheller.fp.err_handling.MB.bind": {"tf": 2.6457513110645907}, "grscheller.fp.err_handling.MB.call": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.lz_call": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.MB.idx": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.lz_idx": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.MB.sequence": {"tf": 4.898979485566356}, "grscheller.fp.err_handling.XOR": {"tf": 9.433981132056603}, "grscheller.fp.err_handling.XOR.__init__": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 5}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 4.123105625617661}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 3.605551275463989}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 3.1622776601683795}, "grscheller.fp.err_handling.XOR.map": {"tf": 7.3484692283495345}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.bind": {"tf": 3.1622776601683795}, "grscheller.fp.err_handling.XOR.call": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.lz_call": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.idx": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.lz_idx": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 5.830951894845301}, "grscheller.fp.function": {"tf": 5.477225575051661}, "grscheller.fp.function.swap": {"tf": 1.7320508075688772}, "grscheller.fp.function.sequenced": {"tf": 1.7320508075688772}, "grscheller.fp.function.partial": {"tf": 4.795831523312719}, "grscheller.fp.function.iter_args": {"tf": 3}, "grscheller.fp.iterables": {"tf": 10.954451150103322}, "grscheller.fp.iterables.FM": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.concat": {"tf": 4.358898943540674}, "grscheller.fp.iterables.merge": {"tf": 5.385164807134504}, "grscheller.fp.iterables.exhaust": {"tf": 3}, "grscheller.fp.iterables.drop": {"tf": 2.6457513110645907}, "grscheller.fp.iterables.drop_while": {"tf": 2.23606797749979}, "grscheller.fp.iterables.take": {"tf": 2}, "grscheller.fp.iterables.take_while": {"tf": 3.1622776601683795}, "grscheller.fp.iterables.take_split": {"tf": 4.795831523312719}, "grscheller.fp.iterables.take_while_split": {"tf": 4.795831523312719}, "grscheller.fp.iterables.accumulate": {"tf": 4.47213595499958}, "grscheller.fp.iterables.foldL0": {"tf": 4.58257569495584}, "grscheller.fp.iterables.foldL1": {"tf": 4.358898943540674}, "grscheller.fp.iterables.mbFoldL": {"tf": 4.898979485566356}, "grscheller.fp.lazy": {"tf": 4.358898943540674}, "grscheller.fp.lazy.Lazy": {"tf": 7.416198487095663}, "grscheller.fp.lazy.Lazy.__init__": {"tf": 1.7320508075688772}, "grscheller.fp.lazy.Lazy.is_evaluated": {"tf": 1.7320508075688772}, "grscheller.fp.lazy.Lazy.is_exceptional": {"tf": 1.7320508075688772}, "grscheller.fp.lazy.Lazy.is_pure": {"tf": 1.7320508075688772}, "grscheller.fp.lazy.Lazy.eval": {"tf": 4.123105625617661}, "grscheller.fp.lazy.Lazy.result": {"tf": 1.7320508075688772}, "grscheller.fp.lazy.Lazy.exception": {"tf": 1.7320508075688772}, "grscheller.fp.lazy.lazy": {"tf": 7.0710678118654755}, "grscheller.fp.singletons": {"tf": 9}, "grscheller.fp.singletons.NoValue": {"tf": 8.831760866327848}, "grscheller.fp.singletons.Sentinel": {"tf": 9.486832980505138}, "grscheller.fp.singletons.Sentinel.__init__": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Nada": {"tf": 10.583005244258363}, "grscheller.fp.singletons.Nada.sentinel": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 2.449489742783178}, "grscheller.fp.state": {"tf": 7.810249675906654}, "grscheller.fp.state.State": {"tf": 6}, "grscheller.fp.state.State.__init__": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.run": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.bind": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.map": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.map2": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.both": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.unit": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.getState": {"tf": 3.1622776601683795}, "grscheller.fp.state.State.setState": {"tf": 4.123105625617661}, "grscheller.fp.state.State.modifyState": {"tf": 1.7320508075688772}}, "df": 78, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1, "s": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.function": {"tf": 1.4142135623730951}, "grscheller.fp.function.partial": {"tf": 1}}, "df": 3}}, "s": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "c": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.singletons": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.state": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 2}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"grscheller.fp.state.State.getState": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.7320508075688772}, "grscheller.fp.state.State": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1, "s": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 2}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.state": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp": {"tf": 2.6457513110645907}, "grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}, "s": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1.7320508075688772}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 2}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL1": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 2.23606797749979}, "grscheller.fp.lazy.lazy": {"tf": 2.23606797749979}}, "df": 9, "p": {"docs": {"grscheller.fp": {"tf": 2.6457513110645907}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.function": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.state": {"tf": 1.7320508075688772}}, "df": 11}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.function": {"tf": 3.1622776601683795}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 4}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy": {"tf": 2.6457513110645907}, "grscheller.fp.lazy.Lazy": {"tf": 2}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.lazy": {"tf": 2}, "grscheller.fp.state.State": {"tf": 1}}, "df": 19, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.function": {"tf": 1.4142135623730951}, "grscheller.fp.state": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 4}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 2}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.7320508075688772}, "grscheller.fp.state": {"tf": 1.7320508075688772}}, "df": 15}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}}, "df": 1, "l": {"0": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}, "1": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "s": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 3}}}, "o": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}}, "df": 1}, "u": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.state": {"tf": 1.7320508075688772}, "grscheller.fp.state.State": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 2}, "grscheller.fp.singletons.Nada": {"tf": 2.23606797749979}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 2}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"grscheller.fp.iterables": {"tf": 2.23606797749979}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.state": {"tf": 1}, "grscheller.fp.state.State.unit": {"tf": 1}}, "df": 10}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2, "o": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.function": {"tf": 1.4142135623730951}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1.7320508075688772}, "grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while_split": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 2.449489742783178}, "grscheller.fp.lazy.lazy": {"tf": 1.7320508075688772}, "grscheller.fp.singletons": {"tf": 2.6457513110645907}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 2}, "grscheller.fp.singletons.Nada": {"tf": 2.23606797749979}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}, "grscheller.fp.state": {"tf": 2}, "grscheller.fp.state.State.getState": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 22, "o": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp": {"tf": 1.7320508075688772}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 4}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 2.23606797749979}, "grscheller.fp.state": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 3}, "grscheller.fp.function": {"tf": 1.4142135623730951}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.merge": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.take_while_split": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 2.6457513110645907}, "grscheller.fp.lazy.lazy": {"tf": 2}, "grscheller.fp.singletons": {"tf": 2}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state": {"tf": 2}, "grscheller.fp.state.State": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 26, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 7}, "y": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.state.State": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 3}, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 7}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.state.State": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables": {"tf": 2.6457513110645907}, "grscheller.fp.iterables.take_split": {"tf": 1}}, "df": 3, "s": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 2.449489742783178}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR": {"tf": 3.1622776601683795}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 2.23606797749979}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 2}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.map": {"tf": 2}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.function": {"tf": 2}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1.4142135623730951}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 2.23606797749979}, "grscheller.fp.lazy.lazy": {"tf": 2}, "grscheller.fp.singletons": {"tf": 3}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 2.6457513110645907}, "grscheller.fp.state": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.unit": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.setState": {"tf": 1.7320508075688772}}, "df": 31, "i": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}, "n": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 2}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_split": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL0": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL1": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.mbFoldL": {"tf": 1.7320508075688772}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 22, "d": {"docs": {"grscheller.fp": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.function": {"tf": 1.4142135623730951}, "grscheller.fp.function.partial": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 2.23606797749979}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 2}, "grscheller.fp.singletons.Nada": {"tf": 2}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 12}, "y": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.lazy": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 11}, "g": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 2.23606797749979}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 5, "s": {"docs": {"grscheller.fp.function": {"tf": 2}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1.4142135623730951}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 2.449489742783178}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 8}}}}}}, "s": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 2}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}}, "df": 5, "o": {"docs": {}, "df": 0, "w": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1, "s": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.singletons": {"tf": 2.23606797749979}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 4}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 2, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.state.State.unit": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.7320508075688772}}, "df": 18, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1.4142135623730951}}, "df": 3}}, "n": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 7}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 2.449489742783178}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1.7320508075688772}}, "df": 1}}, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1, "n": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.state": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.idx": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables": {"tf": 2.23606797749979}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1.7320508075688772}}, "df": 9, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.lazy": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.singletons": {"tf": 2}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 3.7416573867739413}, "grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL0": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldL1": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.mbFoldL": {"tf": 1.7320508075688772}}, "df": 12, "s": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 2.449489742783178}, "grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.merge": {"tf": 2}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables": {"tf": 2}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 2}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 13, "s": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.function": {"tf": 1.4142135623730951}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 2}}, "df": 4}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR": {"tf": 1.7320508075688772}, "grscheller.fp.state": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons": {"tf": 2}, "grscheller.fp.state": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 2}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 2}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 2.23606797749979}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1.4142135623730951}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 22}, "s": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.map": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 2.23606797749979}, "grscheller.fp.iterables.merge": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_split": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while_split": {"tf": 2}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 2.6457513110645907}, "grscheller.fp.lazy.lazy": {"tf": 2.23606797749979}, "grscheller.fp.singletons": {"tf": 2}, "grscheller.fp.singletons.NoValue": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}, "grscheller.fp.state": {"tf": 1.4142135623730951}, "grscheller.fp.state.State": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.getState": {"tf": 1}}, "df": 24}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 3, "s": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.state": {"tf": 2.6457513110645907}, "grscheller.fp.state.State": {"tf": 2.6457513110645907}, "grscheller.fp.state.State.unit": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1.7320508075688772}, "grscheller.fp.state.State.setState": {"tf": 1.7320508075688772}}, "df": 6}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons": {"tf": 2.449489742783178}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 2}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}}, "df": 2}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}}, "df": 4, "d": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "t": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons": {"tf": 2.449489742783178}, "grscheller.fp.singletons.Sentinel": {"tf": 3.3166247903554}}, "df": 2, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.function": {"tf": 1.4142135623730951}, "grscheller.fp.function.swap": {"tf": 1}}, "df": 3, "s": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1.7320508075688772}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 8}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1.7320508075688772}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"grscheller.fp.lazy": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL1": {"tf": 1}}, "df": 3, "s": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 6}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 5}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.map": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1}}, "df": 20, "s": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 10}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 3, "s": {"docs": {"grscheller.fp.function.partial": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy.eval": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL1": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 2.8284271247461903}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 2}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 2}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.map": {"tf": 2}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 2.449489742783178}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 11}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"grscheller.fp.iterables.take_while": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.state.State": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp": {"tf": 2.449489742783178}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.state": {"tf": 1}}, "df": 7, "s": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.state": {"tf": 1.7320508075688772}}, "df": 5, "i": {"docs": {}, "df": 0, "c": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB": {"tf": 1}}, "df": 3}}}, "p": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}}, "df": 7, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB": {"tf": 3.4641016151377544}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.bind": {"tf": 1}, "grscheller.fp.err_handling.MB.call": {"tf": 1}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 11, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}}, "df": 1}}, "l": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {"grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1.7320508075688772}}, "df": 2}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.state": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.4142135623730951}}, "df": 5}, "r": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 2}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.function.iter_args": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.state.State.setState": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.MB.call": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 4}}, "s": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}, "e": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.Lazy.eval": {"tf": 1}}, "df": 1, "d": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state.State.unit": {"tf": 1}}, "df": 1, "d": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.state.State.getState": {"tf": 2}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.lazy": {"tf": 2}, "grscheller.fp.lazy.Lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {"grscheller.fp.err_handling": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 5}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 2.449489742783178}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.map": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 12, "s": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.function.partial": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}, "s": {"docs": {"grscheller.fp.iterables.take_while": {"tf": 1}}, "df": 1}, "t": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}}, "df": 4, "o": {"docs": {"grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}}, "df": 3, "n": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 2}, "grscheller.fp.state": {"tf": 1}}, "df": 7, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.NoValue": {"tf": 2.23606797749979}, "grscheller.fp.singletons.Sentinel": {"tf": 1.7320508075688772}}, "df": 3}}, "t": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 2}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.singletons": {"tf": 2}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 17, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.NoValue": {"tf": 2.23606797749979}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}, "w": {"docs": {"grscheller.fp.state.State.getState": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.singletons": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Nada": {"tf": 3.3166247903554}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 8, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 4}}}, "r": {"docs": {"grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 2}}, "d": {"docs": {"grscheller.fp.singletons": {"tf": 1.7320508075688772}}, "df": 1}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}, "grscheller.fp.state": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}}, "df": 6}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.state.State.getState": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}}, "df": 3}}, "b": {"docs": {"grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}, "grscheller.fp.state": {"tf": 1.4142135623730951}, "grscheller.fp.state.State": {"tf": 1.4142135623730951}}, "df": 5}}}, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1.7320508075688772}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1.7320508075688772}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.err_handling.XOR.makeRight": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {"grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1.7320508075688772}}, "df": 3}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.err_handling.XOR.makeRight": {"tf": 1.4142135623730951}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.NoValue": {"tf": 1}}, "df": 8}, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.lazy.lazy": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 2.23606797749979}, "grscheller.fp.function": {"tf": 1.7320508075688772}, "grscheller.fp.function.swap": {"tf": 1}, "grscheller.fp.function.sequenced": {"tf": 1}, "grscheller.fp.function.iter_args": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 2.23606797749979}, "grscheller.fp.iterables.take_while_split": {"tf": 2}, "grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}, "grscheller.fp.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 2.6457513110645907}, "grscheller.fp.lazy.lazy": {"tf": 2.23606797749979}, "grscheller.fp.singletons": {"tf": 2}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.state": {"tf": 1.7320508075688772}, "grscheller.fp.state.State": {"tf": 1}}, "df": 29}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.lazy.Lazy.eval": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Sentinel": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.function.sequenced": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.state.State": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 2}, "grscheller.fp.err_handling.MB.get": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 2}}, "df": 4, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.MB.map": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 5}}}, "o": {"docs": {"grscheller.fp.singletons": {"tf": 1}, "grscheller.fp.state": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}}, "df": 5}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}, "n": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 4}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.function": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1, "s": {"docs": {"grscheller.fp.singletons.Nada.nada_get": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons.NoValue": {"tf": 1}, "grscheller.fp.singletons.Sentinel": {"tf": 1}, "grscheller.fp.singletons.Nada": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.lazy": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.lazy": {"tf": 1.4142135623730951}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.lazy.lazy": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {"grscheller.fp.lazy.Lazy": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.state": {"tf": 1}}, "df": 1, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables": {"tf": 2}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 2.8284271247461903}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 1}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.map": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 2}}, "df": 7, "[": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.err_handling.XOR.map": {"tf": 1.7320508075688772}}, "df": 1}, "l": {"docs": {"grscheller.fp.err_handling.XOR.sequence": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 2.23606797749979}, "grscheller.fp.err_handling.MB.get": {"tf": 2}, "grscheller.fp.err_handling.MB.idx": {"tf": 1}, "grscheller.fp.err_handling.XOR": {"tf": 2.23606797749979}, "grscheller.fp.err_handling.XOR.getLeft": {"tf": 2.23606797749979}, "grscheller.fp.err_handling.XOR.getRight": {"tf": 2}, "grscheller.fp.err_handling.XOR.makeRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.newRight": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.map": {"tf": 1.7320508075688772}, "grscheller.fp.err_handling.XOR.mapRight": {"tf": 1}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1}, "grscheller.fp.function.partial": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_while_split": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL0": {"tf": 1}, "grscheller.fp.iterables.foldL1": {"tf": 1}, "grscheller.fp.iterables.mbFoldL": {"tf": 1.7320508075688772}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1}, "grscheller.fp.singletons": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.NoValue": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Sentinel": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Nada.nada_get": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1.4142135623730951}, "grscheller.fp.state.State.unit": {"tf": 1}, "grscheller.fp.state.State.getState": {"tf": 1}, "grscheller.fp.state.State.setState": {"tf": 1.4142135623730951}}, "df": 30, "s": {"docs": {"grscheller.fp.err_handling.MB": {"tf": 1}, "grscheller.fp.err_handling.MB.sequence": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR": {"tf": 2}, "grscheller.fp.err_handling.XOR.bind": {"tf": 1.4142135623730951}, "grscheller.fp.err_handling.XOR.sequence": {"tf": 1.7320508075688772}, "grscheller.fp.function": {"tf": 1}, "grscheller.fp.iterables": {"tf": 2.6457513110645907}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.drop_while": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.take_while": {"tf": 1}, "grscheller.fp.iterables.take_split": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take_while_split": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.lazy": {"tf": 1}, "grscheller.fp.lazy.Lazy": {"tf": 1.4142135623730951}, "grscheller.fp.singletons": {"tf": 2.23606797749979}, "grscheller.fp.singletons.NoValue": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Sentinel": {"tf": 1.7320508075688772}, "grscheller.fp.singletons.Nada": {"tf": 1.4142135623730951}, "grscheller.fp.state.State": {"tf": 1}}, "df": 23}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.err_handling.MB.get": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.take_split": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.singletons": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.singletons": {"tf": 1.4142135623730951}, "grscheller.fp.singletons.Nada": {"tf": 1}, "grscheller.fp.state": {"tf": 1}, "grscheller.fp.state.State": {"tf": 1}}, "df": 4}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();