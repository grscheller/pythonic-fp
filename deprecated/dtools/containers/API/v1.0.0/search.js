window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"dtools.containers": {"fullname": "dtools.containers", "modulename": "dtools.containers", "kind": "module", "doc": "<h3 id=\"developer-tools-container-like-data-structures\">Developer Tools - Container-like data structures</h3>\n\n<ul>\n<li><em>module</em> <code>dtools.containers</code>: Container-like data structures\n<ul>\n<li><em>module</em> <code>box</code>: stateful container holding at most one object</li>\n<li><em>module</em> <code>functional_tuple</code>: directly inherited from the <code>tuple</code> builtin \n<ul>\n<li>gives <code>tuple</code> FP interface</li>\n<li>designed to be further inherited from</li>\n</ul></li>\n<li><em>module</em> <code>immutable_list</code>: \n<ul>\n<li>hashable\n<ul>\n<li>hashability will be enforced at runtime\n<ul>\n<li>should also be enforced with typing tooling (not yet fully tested)</li>\n</ul></li>\n</ul></li>\n</ul></li>\n<li><em>module</em> <code>maybe</code>: implements the \"maybe\" (also called \"optional\") monad\n<ul>\n<li>class representing a possibly missing value</li>\n</ul></li>\n<li><em>module</em> <code>xor</code>: implements a left biased \"either\" monad\n<ul>\n<li>class representing either a \"left\" or \"right\" value, but not both\n<ul>\n<li>these values can be the same or different types</li>\n<li>the \"left\" value is taken to be the \"happy path\"</li>\n</ul></li>\n</ul></li>\n</ul></li>\n</ul>\n"}, "dtools.containers.box": {"fullname": "dtools.containers.box", "modulename": "dtools.containers.box", "kind": "module", "doc": "<p>Stateful container holding at most one item of a given type.</p>\n\n<ul>\n<li>where <code>Box(item)</code> contains at most one item of a generic type</li>\n<li><code>Box()</code> semantically represents an empty container\n<ul>\n<li>can store any item of any type, including <code>None</code>\n<ul>\n<li>with one exception, storing <code>Sentinel('Box')</code> results in a <code>Box()</code></li>\n</ul></li>\n</ul></li>\n<li>mutable methods can throw <code>ValueError</code>\n<ul>\n<li><code>Box().get()</code> will throw <code>ValueError</code> </li>\n</ul></li>\n<li>use functional methods <code>map</code> and <code>bind</code> to create boxes of other types</li>\n<li>boxes are iterable</li>\n</ul>\n"}, "dtools.containers.box.Box": {"fullname": "dtools.containers.box.Box", "modulename": "dtools.containers.box", "qualname": "Box", "kind": "class", "doc": "<p>Container holding at most one item of a given type</p>\n\n<ul>\n<li>where <code>Box(item)</code> contains at most one item of type <code>~D</code></li>\n<li><code>Box()</code> creates an empty container\n<ul>\n<li>can store any item of any type, including <code>None</code>\n<ul>\n<li>with one exception, storing <code>Sentinel('Box')</code> results in a <code>Box()</code></li>\n</ul></li>\n</ul></li>\n<li>mutable methods can throw <code>ValueError</code>\n<ul>\n<li><code>Box().get()</code> will throw <code>ValueError</code> </li>\n</ul></li>\n<li>use functional methods <code>map</code> and <code>bind</code> to create boxes of other types</li>\n</ul>\n", "bases": "typing.Generic[D]"}, "dtools.containers.box.Box.__init__": {"fullname": "dtools.containers.box.Box.__init__", "modulename": "dtools.containers.box", "qualname": "Box.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">singletons</span><span class=\"o\">.</span><span class=\"n\">Sentinel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Box&#39;</span><span class=\"p\">)</span></span>)</span>"}, "dtools.containers.box.Box.get": {"fullname": "dtools.containers.box.Box.get", "modulename": "dtools.containers.box", "qualname": "Box.get", "kind": "function", "doc": "<p>Return the contained value if it exists, otherwise an alternate value.</p>\n\n<ul>\n<li>alternate value must be of type <code>~D</code></li>\n<li>raises <code>ValueError</code> if an alternate value is not provided but needed</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">alt</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">singletons</span><span class=\"o\">.</span><span class=\"n\">Sentinel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Box&#39;</span><span class=\"p\">)</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.box.Box.pop": {"fullname": "dtools.containers.box.Box.pop", "modulename": "dtools.containers.box", "qualname": "Box.pop", "kind": "function", "doc": "<p>Pop the value if Box is not empty.</p>\n\n<ul>\n<li>raises <code>ValueError</code> if box is empty</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.box.Box.push": {"fullname": "dtools.containers.box.Box.push", "modulename": "dtools.containers.box", "qualname": "Box.push", "kind": "function", "doc": "<p>Push an item in an empty Box.</p>\n\n<ul>\n<li>raises <code>ValueError</code> if box is not empty</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">D</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.box.Box.put": {"fullname": "dtools.containers.box.Box.put", "modulename": "dtools.containers.box", "qualname": "Box.put", "kind": "function", "doc": "<p>Put an item in the Box. Discard any previous contents.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">D</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "dtools.containers.box.Box.exchange": {"fullname": "dtools.containers.box.Box.exchange", "modulename": "dtools.containers.box", "qualname": "Box.exchange", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_item</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">D</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.box.Box.map": {"fullname": "dtools.containers.box.Box.map", "modulename": "dtools.containers.box", "qualname": "Box.map", "kind": "function", "doc": "<p>Map function <code>f</code> over contents. Return new instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">box</span><span class=\"o\">.</span><span class=\"n\">Box</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.box.Box.bind": {"fullname": "dtools.containers.box.Box.bind", "modulename": "dtools.containers.box", "qualname": "Box.bind", "kind": "function", "doc": "<p>Flatmap <code>Box</code> with function <code>f</code>. Return new instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">box</span><span class=\"o\">.</span><span class=\"n\">Box</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">box</span><span class=\"o\">.</span><span class=\"n\">Box</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.functional_tuple": {"fullname": "dtools.containers.functional_tuple", "modulename": "dtools.containers.functional_tuple", "kind": "module", "doc": "<h3 id=\"dtoolscontainersftupleswrapped\">dtools.containers.ftuples.wrapped</h3>\n\n<p>Providing a FP interface for tuples. Implemented by inheriting from tuple.</p>\n\n<ul>\n<li>class <code>FunctionalTuple</code>\n<ul>\n<li>inherits from tuple, \"is-a\" implementation\n<ul>\n<li>\"homogeneous\" in its data type</li>\n<li>supports being further inherited from</li>\n<li>unslotted</li>\n</ul></li>\n<li>function <code>functional_tuple</code>\n<ul>\n<li>return an InheritedTuple from function's arguments</li>\n</ul></li>\n</ul></li>\n</ul>\n"}, "dtools.containers.functional_tuple.FunctionalTuple": {"fullname": "dtools.containers.functional_tuple.FunctionalTuple", "modulename": "dtools.containers.functional_tuple", "qualname": "FunctionalTuple", "kind": "class", "doc": "<p>Functional Tuple suitable for inheritance</p>\n\n<ul>\n<li>supports both indexing and slicing</li>\n<li><code>FunctionalTuple</code> addition &amp; <code>int</code> multiplication supported\n<ul>\n<li>addition concatenates results, resulting type a Union type</li>\n<li>both left and right int multiplication supported</li>\n</ul></li>\n</ul>\n", "bases": "tuple[D, ...], typing.Generic[D]"}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"fullname": "dtools.containers.functional_tuple.FunctionalTuple.foldl", "modulename": "dtools.containers.functional_tuple", "qualname": "FunctionalTuple.foldl", "kind": "function", "doc": "<p>Fold Left</p>\n\n<ul>\n<li>fold left with an optional starting value</li>\n<li>first argument of function <code>f</code> is for the accumulated value</li>\n<li>throws <code>ValueError</code> when <code>FunctionalTuple</code> empty and a start value not given</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"fullname": "dtools.containers.functional_tuple.FunctionalTuple.foldr", "modulename": "dtools.containers.functional_tuple", "qualname": "FunctionalTuple.foldr", "kind": "function", "doc": "<p>Fold Right</p>\n\n<ul>\n<li>fold right with an optional starting value</li>\n<li>second argument of function <code>f</code> is for the accumulated value</li>\n<li>throws <code>ValueError</code> when <code>FunctionalTuple</code> empty and a start value not given</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"fullname": "dtools.containers.functional_tuple.FunctionalTuple.copy", "modulename": "dtools.containers.functional_tuple", "qualname": "FunctionalTuple.copy", "kind": "function", "doc": "<p>Return a shallow copy of FunctionalTuple in O(1) time &amp; space complexity.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">functional_tuple</span><span class=\"o\">.</span><span class=\"n\">FunctionalTuple</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"fullname": "dtools.containers.functional_tuple.FunctionalTuple.accummulate", "modulename": "dtools.containers.functional_tuple", "qualname": "FunctionalTuple.accummulate", "kind": "function", "doc": "<p>Accumulate partial folds</p>\n\n<p>Accumulate partial fold results in an FunctionalTuple with an optional starting\nvalue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">functional_tuple</span><span class=\"o\">.</span><span class=\"n\">FunctionalTuple</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"fullname": "dtools.containers.functional_tuple.FunctionalTuple.map", "modulename": "dtools.containers.functional_tuple", "qualname": "FunctionalTuple.map", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">functional_tuple</span><span class=\"o\">.</span><span class=\"n\">FunctionalTuple</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"fullname": "dtools.containers.functional_tuple.FunctionalTuple.bind", "modulename": "dtools.containers.functional_tuple", "qualname": "FunctionalTuple.bind", "kind": "function", "doc": "<p>Bind function <code>f</code> to the <code>FunctionalTuple</code>.</p>\n\n<ul>\n<li>FM Enum types\n<ul>\n<li>CONCAT: sequentially concatenate iterables one after the other</li>\n<li>MERGE: round-robin merge iterables until one is exhausted</li>\n<li>EXHAUST: round-robin merge iterables until all are exhausted</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">functional_tuple</span><span class=\"o\">.</span><span class=\"n\">FunctionalTuple</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">iterables</span><span class=\"o\">.</span><span class=\"n\">FM</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">FM</span><span class=\"o\">.</span><span class=\"n\">CONCAT</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">functional_tuple</span><span class=\"o\">.</span><span class=\"n\">FunctionalTuple</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">],</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.immutable_list": {"fullname": "dtools.containers.immutable_list", "modulename": "dtools.containers.immutable_list", "kind": "module", "doc": "<h4 id=\"immutable-homogeneous-lists\">Immutable homogeneous \"lists\"</h4>\n\n<ul>\n<li>immutable data structure whose elements are all of the same type</li>\n<li>hashable if elements are hashable\n<ul>\n<li>TODO: not sure if I am enforcing hashability</li>\n</ul></li>\n<li>declared covariant in its generic datatype\n<ul>\n<li>hashability should be enforced by LSP tooling</li>\n<li>hashability will be enforced at runtime</li>\n<li>ImmutableList addition supported via concatenation</li>\n<li>ImmutableList integer multiplication supported</li>\n</ul></li>\n</ul>\n"}, "dtools.containers.immutable_list.ImmutableList": {"fullname": "dtools.containers.immutable_list.ImmutableList", "modulename": "dtools.containers.immutable_list", "qualname": "ImmutableList", "kind": "class", "doc": "<p>Immutable List like data structures</p>\n\n<ul>\n<li>immutable \"lists\" all whose elements are all of the same type</li>\n<li>A <code>ImmutableList</code> is covariant in its generic datatype\n<ul>\n<li>its method type parameters are also declared covariant</li>\n<li>hashability will be enforced by LSP tooling</li>\n</ul></li>\n<li>supports both indexing and slicing</li>\n<li><code>ImmutableList</code> addition &amp; <code>int</code> multiplication supported\n<ul>\n<li>addition concatenates results, resulting type a Union type</li>\n<li>both left and right int multiplication supported</li>\n</ul></li>\n</ul>\n", "bases": "collections.abc.Hashable, typing.Generic[D_co]"}, "dtools.containers.immutable_list.ImmutableList.__init__": {"fullname": "dtools.containers.immutable_list.ImmutableList.__init__", "modulename": "dtools.containers.immutable_list", "qualname": "ImmutableList.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">dss</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">D_co</span><span class=\"p\">]</span></span>)</span>"}, "dtools.containers.immutable_list.ImmutableList.foldl": {"fullname": "dtools.containers.immutable_list.ImmutableList.foldl", "modulename": "dtools.containers.immutable_list", "qualname": "ImmutableList.foldl", "kind": "function", "doc": "<p>Fold Left</p>\n\n<ul>\n<li>fold left with an optional starting value</li>\n<li>first argument of function <code>f</code> is for the accumulated value</li>\n<li>throws <code>ValueError</code> when <code>ImmutableList</code> empty and a start value not given</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">D_co</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.immutable_list.ImmutableList.foldr": {"fullname": "dtools.containers.immutable_list.ImmutableList.foldr", "modulename": "dtools.containers.immutable_list", "qualname": "ImmutableList.foldr", "kind": "function", "doc": "<p>Fold Right</p>\n\n<ul>\n<li>fold right with an optional starting value</li>\n<li>second argument of function <code>f</code> is for the accumulated value</li>\n<li>throws <code>ValueError</code> when <code>ImmutableList</code> empty and a start value not given</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D_co</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R_co</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">R_co</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">R_co</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">R_co</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">R_co</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"fullname": "dtools.containers.immutable_list.ImmutableList.accummulate", "modulename": "dtools.containers.immutable_list", "qualname": "ImmutableList.accummulate", "kind": "function", "doc": "<p>Accumulate partial folds</p>\n\n<p>Accumulate partial fold results in an ImmutableList with an optional\nstarting value.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">D_co</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">immutable_list</span><span class=\"o\">.</span><span class=\"n\">ImmutableList</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L_co</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.immutable_list.ImmutableList.map": {"fullname": "dtools.containers.immutable_list.ImmutableList.map", "modulename": "dtools.containers.immutable_list", "qualname": "ImmutableList.map", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D_co</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">U_co</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">immutable_list</span><span class=\"o\">.</span><span class=\"n\">ImmutableList</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U_co</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.immutable_list.ImmutableList.bind": {"fullname": "dtools.containers.immutable_list.ImmutableList.bind", "modulename": "dtools.containers.immutable_list", "qualname": "ImmutableList.bind", "kind": "function", "doc": "<p>Bind function <code>f</code> to the <code>ImmutableList</code>.</p>\n\n<ul>\n<li>FM Enum types\n<ul>\n<li>CONCAT: sequentially concatenate iterables one after the other</li>\n<li>MERGE: round-robin merge iterables until one is exhausted</li>\n<li>EXHAUST: round-robin merge iterables until all are exhausted</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D_co</span><span class=\"p\">],</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">immutable_list</span><span class=\"o\">.</span><span class=\"n\">ImmutableList</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U_co</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">iterables</span><span class=\"o\">.</span><span class=\"n\">FM</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">FM</span><span class=\"o\">.</span><span class=\"n\">CONCAT</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">immutable_list</span><span class=\"o\">.</span><span class=\"n\">ImmutableList</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U_co</span><span class=\"p\">],</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.immutable_list.immutable_list": {"fullname": "dtools.containers.immutable_list.immutable_list", "modulename": "dtools.containers.immutable_list", "qualname": "immutable_list", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">ds</span><span class=\"p\">:</span> <span class=\"o\">+</span><span class=\"n\">D_co</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">immutable_list</span><span class=\"o\">.</span><span class=\"n\">ImmutableList</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">D_co</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.maybe": {"fullname": "dtools.containers.maybe", "modulename": "dtools.containers.maybe", "kind": "module", "doc": "<h3 id=\"module-dtoolsfperr_handling-monadic-error-handling\">Module dtools.fp.err_handling - monadic error handling</h3>\n\n<p>Functional data types to use in lieu of exceptions.</p>\n\n<ul>\n<li><em>class</em> MayBe: maybe (optional) monad</li>\n</ul>\n"}, "dtools.containers.maybe.MayBe": {"fullname": "dtools.containers.maybe.MayBe", "modulename": "dtools.containers.maybe", "qualname": "MayBe", "kind": "class", "doc": "<p>Maybe monad - class wrapping a potentially missing value.</p>\n\n<ul>\n<li>where <code>MayBe(value)</code> contains a possible value of type <code>~D</code></li>\n<li><code>MayBe()</code> semantically represent a non-existent or missing value of type <code>~D</code></li>\n<li>immutable semantics\n<ul>\n<li>immutable, therefore made covariant</li>\n<li>can store any value of any type with one exception\n<ul>\n<li>if <code>~D</code> is <code>Sentinel</code>, storing <code>Sentinel(MayBe)</code> results in a MayBe()</li>\n</ul></li>\n</ul></li>\n<li>WARNING: hashability invalidated if contained value is not hashable\n<ul>\n<li>hash function will fail if <code>MayBe</code> contains an unhashable value</li>\n</ul></li>\n<li>WARNING: unsafe method <code>get</code>\n<ul>\n<li>will raise <code>ValueError</code> if MayBe empty and an alt return value not given</li>\n<li>best practice is to first check the MayBe in a boolean context</li>\n</ul></li>\n</ul>\n", "bases": "typing.Generic[D]"}, "dtools.containers.maybe.MayBe.__init__": {"fullname": "dtools.containers.maybe.MayBe.__init__", "modulename": "dtools.containers.maybe", "qualname": "MayBe.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">singletons</span><span class=\"o\">.</span><span class=\"n\">Sentinel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel</span><span class=\"p\">(</span><span class=\"s1\">&#39;MayBe&#39;</span><span class=\"p\">)</span></span>)</span>"}, "dtools.containers.maybe.MayBe.get": {"fullname": "dtools.containers.maybe.MayBe.get", "modulename": "dtools.containers.maybe", "qualname": "MayBe.get", "kind": "function", "doc": "<p>Return the contained value if it exists, otherwise an alternate value.</p>\n\n<ul>\n<li>alternate value must be of type <code>~D</code></li>\n<li>raises <code>ValueError</code> if an alternate value is not provided but needed</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">alt</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">singletons</span><span class=\"o\">.</span><span class=\"n\">Sentinel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel</span><span class=\"p\">(</span><span class=\"s1\">&#39;MayBe&#39;</span><span class=\"p\">)</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.maybe.MayBe.map": {"fullname": "dtools.containers.maybe.MayBe.map", "modulename": "dtools.containers.maybe", "qualname": "MayBe.map", "kind": "function", "doc": "<p>Map function <code>f</code> over contents.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.maybe.MayBe.bind": {"fullname": "dtools.containers.maybe.MayBe.bind", "modulename": "dtools.containers.maybe", "qualname": "MayBe.bind", "kind": "function", "doc": "<p>Flatmap <code>MayBe</code> with function <code>f</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.maybe.MayBe.map_except": {"fullname": "dtools.containers.maybe.MayBe.map_except", "modulename": "dtools.containers.maybe", "qualname": "MayBe.map_except", "kind": "function", "doc": "<p>Map function <code>f</code> over contents.</p>\n\n<ul>\n<li><p>if <code>f</code> should fail, return a MayBe()</p></li>\n<li><p>WARNING: Swallows exceptions</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.maybe.MayBe.bind_except": {"fullname": "dtools.containers.maybe.MayBe.bind_except", "modulename": "dtools.containers.maybe", "qualname": "MayBe.bind_except", "kind": "function", "doc": "<p>Flatmap <code>MayBe</code> with function <code>f</code>.</p>\n\n<ul>\n<li>WARNING: Swallows exceptions</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.maybe.MayBe.sequence": {"fullname": "dtools.containers.maybe.MayBe.sequence", "modulename": "dtools.containers.maybe", "qualname": "MayBe.sequence", "kind": "function", "doc": "<p>Sequence a mutable indexable of type <code>MayBe[~T]</code></p>\n\n<ul>\n<li>if the iterated <code>MayBe</code> values are not all empty,\n<ul>\n<li>return a <code>MayBe</code> of an iterator of the contained values</li>\n<li>otherwise return an empty <code>MayBe</code></li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence_mb_u</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.maybe.MayBe.failable_call": {"fullname": "dtools.containers.maybe.MayBe.failable_call", "modulename": "dtools.containers.maybe", "qualname": "MayBe.failable_call", "kind": "function", "doc": "<p>Return MayBe wrapped result of a function call that can fail</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.maybe.MayBe.failable_index": {"fullname": "dtools.containers.maybe.MayBe.failable_index", "modulename": "dtools.containers.maybe", "qualname": "MayBe.failable_index", "kind": "function", "doc": "<p>Return a MayBe of an indexed value that can fail</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vs</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">ii</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor": {"fullname": "dtools.containers.xor", "modulename": "dtools.containers.xor", "kind": "module", "doc": "<h3 id=\"module-dtoolsfperr_handling-monadic-error-handling\">Module dtools.fp.err_handling - monadic error handling</h3>\n\n<p>Functional data types to use in lieu of exceptions.</p>\n\n<ul>\n<li><em>class</em> Xor: left biased either monad</li>\n</ul>\n"}, "dtools.containers.xor.Xor": {"fullname": "dtools.containers.xor.Xor", "modulename": "dtools.containers.xor", "qualname": "Xor", "kind": "class", "doc": "<p>Either monad - class semantically containing either a left or a right\nvalue, but not both.</p>\n\n<ul>\n<li>implements a left biased Either Monad\n<ul>\n<li><code>Xor(value: ~L, LEFT)</code> produces a left <code>Xor</code></li>\n<li><code>Xor(value: ~L, RIGHT)</code> produces a right <code>Xor</code></li>\n</ul></li>\n<li>in a Boolean context\n<ul>\n<li><code>True</code> if a left <code>Xor</code></li>\n<li><code>False</code> if a right <code>Xor</code></li>\n</ul></li>\n<li>two <code>Xor</code> objects compare as equal when\n<ul>\n<li>both are left values or both are right values whose values\n<ul>\n<li>are the same object</li>\n<li>compare as equal</li>\n</ul></li>\n</ul></li>\n<li>immutable, an <code>Xor</code> does not change after being created\n<ul>\n<li>immutable semantics, map &amp; bind return new instances\n<ul>\n<li>warning: contained value need not be immutable</li>\n<li>warning: not hashable if value is mutable</li>\n</ul></li>\n</ul></li>\n</ul>\n", "bases": "typing.Generic[L, R]"}, "dtools.containers.xor.Xor.__init__": {"fullname": "dtools.containers.xor.Xor.__init__", "modulename": "dtools.containers.xor", "qualname": "Xor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">bool</span><span class=\"o\">.</span><span class=\"n\">Bool</span> <span class=\"o\">=</span> <span class=\"n\">Truth</span><span class=\"p\">(</span><span class=\"s2\">&quot;LEFT&quot;</span><span class=\"p\">)</span></span>)</span>"}, "dtools.containers.xor.Xor.get": {"fullname": "dtools.containers.xor.Xor.get", "modulename": "dtools.containers.xor", "qualname": "Xor.get", "kind": "function", "doc": "<p>Get value if a left.</p>\n\n<ul>\n<li>if the <code>Xor</code> is a \"left\" Xor\n<ul>\n<li>return its value</li>\n</ul></li>\n<li>if the <code>Xor</code> contains a right value\n<ul>\n<li>raises <code>ValueError</code></li>\n<li>best practice is to first check the <code>Xor</code> in a boolean context</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.get_left": {"fullname": "dtools.containers.xor.Xor.get_left", "modulename": "dtools.containers.xor", "qualname": "Xor.get_left", "kind": "function", "doc": "<p>Get value of <code>Xor</code> if a left. Safer version of <code>get</code> method.</p>\n\n<ul>\n<li>if <code>Xor</code> contains a left value, return it wrapped in a MayBe</li>\n<li>if <code>Xor</code> contains a right value, return MayBe()</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.get_right": {"fullname": "dtools.containers.xor.Xor.get_right", "modulename": "dtools.containers.xor", "qualname": "Xor.get_right", "kind": "function", "doc": "<p>Get value of <code>Xor</code> if a right</p>\n\n<ul>\n<li>if <code>Xor</code> contains a right value, return it wrapped in a MayBe</li>\n<li>if <code>Xor</code> contains a left value, return MayBe()</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">maybe</span><span class=\"o\">.</span><span class=\"n\">MayBe</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.map_right": {"fullname": "dtools.containers.xor.Xor.map_right", "modulename": "dtools.containers.xor", "qualname": "Xor.map_right", "kind": "function", "doc": "<p>Construct new Xor with a different right.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.map": {"fullname": "dtools.containers.xor.Xor.map", "modulename": "dtools.containers.xor", "qualname": "Xor.map", "kind": "function", "doc": "<p>Map over if a left value. Return new instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.bind": {"fullname": "dtools.containers.xor.Xor.bind", "modulename": "dtools.containers.xor", "qualname": "Xor.bind", "kind": "function", "doc": "<p>Flatmap over the left value - propagate right values.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">],</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.map_except": {"fullname": "dtools.containers.xor.Xor.map_except", "modulename": "dtools.containers.xor", "qualname": "Xor.map_except", "kind": "function", "doc": "<p>Map over if a left value - with fallback upon exception.</p>\n\n<ul>\n<li>if <code>Xor</code> is a left then map <code>f</code> over its value\n<ul>\n<li>if <code>f</code> successful return a left <code>Xor[U, R]</code></li>\n<li>if <code>f</code> unsuccessful return right <code>Xor[S, R]</code>\n<ul>\n<li>swallows many exceptions <code>f</code> may throw at run time</li>\n</ul></li>\n</ul></li>\n<li>if <code>Xor</code> is a right\n<ul>\n<li>return new <code>Xor(right=self._right): Xor[U, R]</code></li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">fallback_right</span><span class=\"p\">:</span> <span class=\"o\">+</span><span class=\"n\">R</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.bind_except": {"fullname": "dtools.containers.xor.Xor.bind_except", "modulename": "dtools.containers.xor", "qualname": "Xor.bind_except", "kind": "function", "doc": "<p>Flatmap <code>Xor</code> with function <code>f</code> with fallback right</p>\n\n<ul>\n<li>provide fallback right value if exception thrown.</li>\n<li>WARNING: Swallows exceptions</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">+</span><span class=\"n\">L</span><span class=\"p\">],</span> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">fallback_right</span><span class=\"p\">:</span> <span class=\"o\">+</span><span class=\"n\">R</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.sequence": {"fullname": "dtools.containers.xor.Xor.sequence", "modulename": "dtools.containers.xor", "qualname": "Xor.sequence", "kind": "function", "doc": "<p>Sequence an indexable of type <code>Xor[~U, ~V]</code></p>\n\n<ul>\n<li>if the iterated <code>Xor</code> values are all lefts, then\n<ul>\n<li>return an <code>Xor</code> of an iterable of the left values</li>\n</ul></li>\n<li>otherwise return a right Xor containing the first right encountered</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence_xor_uv</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">U</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.failable_call": {"fullname": "dtools.containers.xor.Xor.failable_call", "modulename": "dtools.containers.xor", "qualname": "Xor.failable_call", "kind": "function", "doc": "<p>Return Xor wrapped result of a function call that can fail</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">],</span> <span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"ne\">Exception</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.Xor.failable_index": {"fullname": "dtools.containers.xor.Xor.failable_index", "modulename": "dtools.containers.xor", "qualname": "Xor.failable_index", "kind": "function", "doc": "<p>Return an Xor of an indexed value that can fail</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">ii</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dtools</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">xor</span><span class=\"o\">.</span><span class=\"n\">Xor</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"ne\">Exception</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "dtools.containers.xor.LEFT": {"fullname": "dtools.containers.xor.LEFT", "modulename": "dtools.containers.xor", "qualname": "LEFT", "kind": "variable", "doc": "<p></p>\n", "default_value": "Truth(&quot;LEFT&quot;)"}, "dtools.containers.xor.RIGHT": {"fullname": "dtools.containers.xor.RIGHT", "modulename": "dtools.containers.xor", "qualname": "RIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "Lie(&quot;RIGHT&quot;)"}}, "docInfo": {"dtools.containers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 213}, "dtools.containers.box": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 134}, "dtools.containers.box.Box": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 127}, "dtools.containers.box.Box.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 3}, "dtools.containers.box.Box.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 44}, "dtools.containers.box.Box.pop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 25}, "dtools.containers.box.Box.push": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 25}, "dtools.containers.box.Box.put": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 13}, "dtools.containers.box.Box.exchange": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "dtools.containers.box.Box.map": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 13}, "dtools.containers.box.Box.bind": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 15}, "dtools.containers.functional_tuple": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 84}, "dtools.containers.functional_tuple.FunctionalTuple": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 53}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 48}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 48}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 16}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 106, "bases": 0, "doc": 20}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 148, "bases": 0, "doc": 58}, "dtools.containers.immutable_list": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 86}, "dtools.containers.immutable_list.ImmutableList": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 101}, "dtools.containers.immutable_list.ImmutableList.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "dtools.containers.immutable_list.ImmutableList.foldl": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 122, "bases": 0, "doc": 48}, "dtools.containers.immutable_list.ImmutableList.foldr": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 122, "bases": 0, "doc": 48}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 111, "bases": 0, "doc": 20}, "dtools.containers.immutable_list.ImmutableList.map": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 3}, "dtools.containers.immutable_list.ImmutableList.bind": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 151, "bases": 0, "doc": 58}, "dtools.containers.immutable_list.immutable_list": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "dtools.containers.maybe": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "dtools.containers.maybe.MayBe": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 174}, "dtools.containers.maybe.MayBe.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 3}, "dtools.containers.maybe.MayBe.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 44}, "dtools.containers.maybe.MayBe.map": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 10}, "dtools.containers.maybe.MayBe.bind": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 12}, "dtools.containers.maybe.MayBe.map_except": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 35}, "dtools.containers.maybe.MayBe.bind_except": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 21}, "dtools.containers.maybe.MayBe.sequence": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 55}, "dtools.containers.maybe.MayBe.failable_call": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 13}, "dtools.containers.maybe.MayBe.failable_index": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 12}, "dtools.containers.xor": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "dtools.containers.xor.Xor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 188}, "dtools.containers.xor.Xor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "dtools.containers.xor.Xor.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 69}, "dtools.containers.xor.Xor.get_left": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 52}, "dtools.containers.xor.Xor.get_right": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 44}, "dtools.containers.xor.Xor.map_right": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 10}, "dtools.containers.xor.Xor.map": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 12}, "dtools.containers.xor.Xor.bind": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 11}, "dtools.containers.xor.Xor.map_except": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 108}, "dtools.containers.xor.Xor.bind_except": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 33}, "dtools.containers.xor.Xor.sequence": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 58}, "dtools.containers.xor.Xor.failable_call": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 13}, "dtools.containers.xor.Xor.failable_index": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 12}, "dtools.containers.xor.LEFT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "dtools.containers.xor.RIGHT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}}, "length": 55, "save": true}, "index": {"qualname": {"root": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.box.Box.exchange": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list.immutable_list": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"dtools.containers.box.Box.pop": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers.box.Box.push": {"tf": 1}}, "df": 1}}, "t": {"docs": {"dtools.containers.box.Box.put": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box.Box.exchange": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 8}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}}, "df": 10}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}}, "df": 2}, "r": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}}, "df": 2}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.immutable_list.immutable_list": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.LEFT": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 13}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.RIGHT": {"tf": 1}}, "df": 3}}}}}}}, "fullname": {"root": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.box.Box.exchange": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.immutable_list.immutable_list": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}, "dtools.containers.xor.LEFT": {"tf": 1}, "dtools.containers.xor.RIGHT": {"tf": 1}}, "df": 55}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.box.Box.exchange": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.immutable_list.immutable_list": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}, "dtools.containers.xor.LEFT": {"tf": 1}, "dtools.containers.xor.RIGHT": {"tf": 1}}, "df": 55}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.__init__": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.get": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.pop": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.push": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.put": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.exchange": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.map": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.bind": {"tf": 1.4142135623730951}}, "df": 10}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.immutable_list.immutable_list": {"tf": 1.4142135623730951}}, "df": 9, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"dtools.containers.box.Box.pop": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers.box.Box.push": {"tf": 1}}, "df": 1}}, "t": {"docs": {"dtools.containers.box.Box.put": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box.Box.exchange": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 8}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.get": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.bind": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}}, "df": 2}, "r": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 4}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}}, "df": 8}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}}, "df": 2}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.immutable_list.immutable_list": {"tf": 1.4142135623730951}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.LEFT": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.__init__": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_left": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_right": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_right": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.sequence": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_call": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_index": {"tf": 1.4142135623730951}, "dtools.containers.xor.LEFT": {"tf": 1}, "dtools.containers.xor.RIGHT": {"tf": 1}}, "df": 16}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.RIGHT": {"tf": 1}}, "df": 3}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"dtools.containers.xor.LEFT": {"tf": 1}, "dtools.containers.xor.RIGHT": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers.xor.LEFT": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.LEFT": {"tf": 1.4142135623730951}, "dtools.containers.xor.RIGHT": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.LEFT": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.xor.RIGHT": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.RIGHT": {"tf": 1}}, "df": 1}}}}}}}, "signature": {"root": {"1": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}, "3": {"9": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.get": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.get": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {"dtools.containers.box.Box.__init__": {"tf": 7.14142842854285}, "dtools.containers.box.Box.get": {"tf": 8.54400374531753}, "dtools.containers.box.Box.pop": {"tf": 4.898979485566356}, "dtools.containers.box.Box.push": {"tf": 5.196152422706632}, "dtools.containers.box.Box.put": {"tf": 4.69041575982343}, "dtools.containers.box.Box.exchange": {"tf": 5.830951894845301}, "dtools.containers.box.Box.map": {"tf": 7.280109889280518}, "dtools.containers.box.Box.bind": {"tf": 8.366600265340756}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 10}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 10}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 5.5677643628300215}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 9.486832980505138}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 7.810249675906654}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 11}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 4.58257569495584}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 10}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 10}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 9.486832980505138}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 7.810249675906654}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 11}, "dtools.containers.immutable_list.immutable_list": {"tf": 6.244997998398398}, "dtools.containers.maybe.MayBe.__init__": {"tf": 7.14142842854285}, "dtools.containers.maybe.MayBe.get": {"tf": 8.54400374531753}, "dtools.containers.maybe.MayBe.map": {"tf": 7.280109889280518}, "dtools.containers.maybe.MayBe.bind": {"tf": 8.366600265340756}, "dtools.containers.maybe.MayBe.map_except": {"tf": 7.280109889280518}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 8.366600265340756}, "dtools.containers.maybe.MayBe.sequence": {"tf": 7.810249675906654}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 7.681145747868608}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 7.0710678118654755}, "dtools.containers.xor.Xor.__init__": {"tf": 7.810249675906654}, "dtools.containers.xor.Xor.get": {"tf": 4.898979485566356}, "dtools.containers.xor.Xor.get_left": {"tf": 5.5677643628300215}, "dtools.containers.xor.Xor.get_right": {"tf": 5.5677643628300215}, "dtools.containers.xor.Xor.map_right": {"tf": 7.745966692414834}, "dtools.containers.xor.Xor.map": {"tf": 7.745966692414834}, "dtools.containers.xor.Xor.bind": {"tf": 9.16515138991168}, "dtools.containers.xor.Xor.map_except": {"tf": 8.54400374531753}, "dtools.containers.xor.Xor.bind_except": {"tf": 9.746794344808963}, "dtools.containers.xor.Xor.sequence": {"tf": 8.660254037844387}, "dtools.containers.xor.Xor.failable_call": {"tf": 8.12403840463596}, "dtools.containers.xor.Xor.failable_index": {"tf": 7.416198487095663}}, "df": 42, "v": {"docs": {"dtools.containers.maybe.MayBe.failable_call": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_right": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.sequence": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_call": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_index": {"tf": 1.7320508075688772}}, "df": 6, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"dtools.containers.maybe.MayBe.failable_index": {"tf": 1}}, "df": 1}}, "u": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.bind": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.map": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.sequence": {"tf": 1.4142135623730951}}, "df": 14, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.exchange": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.__init__": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 10}}}}, "v": {"docs": {"dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 1}}, "d": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.box.Box.exchange": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.immutable_list.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}}, "df": 27, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.immutable_list": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.sequence": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 32}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {"dtools.containers.immutable_list.immutable_list": {"tf": 1}}, "df": 1, "s": {"docs": {"dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 23, "p": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor.__init__": {"tf": 1}}, "df": 5}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}}, "df": 4, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}}}}}, "m": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}}, "df": 2}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}}, "df": 4}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.xor.Xor.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.get": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.get": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.box.Box.exchange": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 31}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 4}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"dtools.containers.box.Box.__init__": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.bind": {"tf": 2}}, "df": 4}, "o": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.xor.Xor.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.exchange": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 8}}}, "w": {"docs": {"dtools.containers.box.Box.exchange": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.box.Box.exchange": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.immutable_list": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.immutable_list": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "i": {"docs": {"dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}}, "df": 7}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 23}}}}}}}, "o": {"docs": {"dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 2.449489742783178}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 2.449489742783178}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 2.23606797749979}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.immutable_list": {"tf": 1.4142135623730951}}, "df": 7, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.immutable_list": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.sequence": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 27}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {"dtools.containers.box.Box.map": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.bind": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.failable_call": {"tf": 1.4142135623730951}}, "df": 4, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}}, "df": 4}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers.xor.Xor.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 2.23606797749979}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 2}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 2.23606797749979}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 2}, "dtools.containers.xor.Xor.__init__": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 12, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.immutable_list": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.Xor.__init__": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 2.23606797749979}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 2.23606797749979}, "dtools.containers.xor.Xor.__init__": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind_except": {"tf": 1.7320508075688772}}, "df": 9, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe.__init__": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.bind": {"tf": 2}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 2}, "dtools.containers.maybe.MayBe.sequence": {"tf": 2}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_left": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_right": {"tf": 1.4142135623730951}}, "df": 11}}}}, "b": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.Xor.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.xor.Xor.map_right": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind": {"tf": 2}, "dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind_except": {"tf": 2}, "dtools.containers.xor.Xor.sequence": {"tf": 2.23606797749979}, "dtools.containers.xor.Xor.failable_call": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_index": {"tf": 1.4142135623730951}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 2}}}}}}}}}}}, "bases": {"root": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 4}, "l": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}, "doc": {"root": {"1": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}}, "df": 1}, "docs": {"dtools.containers": {"tf": 9.899494936611665}, "dtools.containers.box": {"tf": 7.810249675906654}, "dtools.containers.box.Box": {"tf": 7.745966692414834}, "dtools.containers.box.Box.__init__": {"tf": 1.7320508075688772}, "dtools.containers.box.Box.get": {"tf": 3.872983346207417}, "dtools.containers.box.Box.pop": {"tf": 3.3166247903554}, "dtools.containers.box.Box.push": {"tf": 3.3166247903554}, "dtools.containers.box.Box.put": {"tf": 1.7320508075688772}, "dtools.containers.box.Box.exchange": {"tf": 1.7320508075688772}, "dtools.containers.box.Box.map": {"tf": 2.23606797749979}, "dtools.containers.box.Box.bind": {"tf": 2.6457513110645907}, "dtools.containers.functional_tuple": {"tf": 6.324555320336759}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 4.69041575982343}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 4.242640687119285}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 4.242640687119285}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 2.23606797749979}, "dtools.containers.functional_tuple.FunctionalTuple.map": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 4.795831523312719}, "dtools.containers.immutable_list": {"tf": 5.5677643628300215}, "dtools.containers.immutable_list.ImmutableList": {"tf": 6}, "dtools.containers.immutable_list.ImmutableList.__init__": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 4.242640687119285}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 4.242640687119285}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 2.23606797749979}, "dtools.containers.immutable_list.ImmutableList.map": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 4.795831523312719}, "dtools.containers.immutable_list.immutable_list": {"tf": 1.7320508075688772}, "dtools.containers.maybe": {"tf": 3.605551275463989}, "dtools.containers.maybe.MayBe": {"tf": 8.306623862918075}, "dtools.containers.maybe.MayBe.__init__": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.get": {"tf": 3.872983346207417}, "dtools.containers.maybe.MayBe.map": {"tf": 2.23606797749979}, "dtools.containers.maybe.MayBe.bind": {"tf": 2.6457513110645907}, "dtools.containers.maybe.MayBe.map_except": {"tf": 4.47213595499958}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 3.605551275463989}, "dtools.containers.maybe.MayBe.sequence": {"tf": 4.898979485566356}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1.4142135623730951}, "dtools.containers.xor": {"tf": 3.605551275463989}, "dtools.containers.xor.Xor": {"tf": 9}, "dtools.containers.xor.Xor.__init__": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.get": {"tf": 5.744562646538029}, "dtools.containers.xor.Xor.get_left": {"tf": 4.47213595499958}, "dtools.containers.xor.Xor.get_right": {"tf": 4.123105625617661}, "dtools.containers.xor.Xor.map_right": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.map": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.bind": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.map_except": {"tf": 7.0710678118654755}, "dtools.containers.xor.Xor.bind_except": {"tf": 3.872983346207417}, "dtools.containers.xor.Xor.sequence": {"tf": 4.69041575982343}, "dtools.containers.xor.Xor.failable_call": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_index": {"tf": 1.4142135623730951}, "dtools.containers.xor.LEFT": {"tf": 1.7320508075688772}, "dtools.containers.xor.RIGHT": {"tf": 1.7320508075688772}}, "df": 55, "d": {"docs": {"dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.get": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.box.Box.put": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 9, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}}, "df": 3, "s": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 2.23606797749979}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1.7320508075688772}}, "df": 19, "s": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 3, "s": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 4}, "n": {"docs": {"dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 4}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"dtools.containers.box": {"tf": 1.7320508075688772}, "dtools.containers.box.Box": {"tf": 1.7320508075688772}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 2}, "dtools.containers.maybe.MayBe": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 11, "s": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers": {"tf": 1.7320508075688772}, "dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}}, "df": 2}}, "d": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 5}}, "s": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_right": {"tf": 1.4142135623730951}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}}, "df": 4}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2, "s": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.xor.Xor.map_right": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.xor.Xor": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}}, "df": 2, "s": {"docs": {"dtools.containers.box.Box": {"tf": 1}}, "df": 1}, "d": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"dtools.containers.xor.Xor": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2, "s": {"docs": {"dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {"dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1.4142135623730951}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 2.449489742783178}, "dtools.containers.xor.Xor.get": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_left": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 14, "s": {"docs": {"dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {"dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1, "s": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 4}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.xor.Xor.get_left": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 2.449489742783178}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}}, "df": 3}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1.4142135623730951}}, "df": 5, "i": {"docs": {}, "df": 0, "c": {"docs": {"dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.maybe": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 2.8284271247461903}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_right": {"tf": 1.4142135623730951}}, "df": 11, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}}, "df": 8}, "d": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}}, "df": 3, "s": {"docs": {"dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 2.23606797749979}, "dtools.containers.box.Box": {"tf": 2.23606797749979}, "dtools.containers.box.Box.pop": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.push": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor": {"tf": 1.7320508075688772}}, "df": 4}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 4}}, "e": {"docs": {"dtools.containers": {"tf": 2.23606797749979}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 5}}}, "y": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 3}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 4}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.maybe": {"tf": 1.4142135623730951}, "dtools.containers.xor": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "a": {"docs": {"dtools.containers": {"tf": 1.7320508075688772}, "dtools.containers.box": {"tf": 1.7320508075688772}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 2.23606797749979}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 2.8284271247461903}, "dtools.containers.xor.Xor.get": {"tf": 2}, "dtools.containers.xor.Xor.get_left": {"tf": 2}, "dtools.containers.xor.Xor.get_right": {"tf": 2}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 2}, "dtools.containers.xor.Xor.sequence": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 25, "t": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}, "t": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box.Box.get": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.get": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "l": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 6}}, "n": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.push": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.get": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.failable_index": {"tf": 1.4142135623730951}}, "df": 19, "y": {"docs": {"dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}}, "df": 4}, "d": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 9}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 8}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 4, "s": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "m": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1, "p": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 4}}}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"dtools.containers.xor.Xor": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1.7320508075688772}, "dtools.containers.box.Box": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 6}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 2, "s": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}}, "df": 8}}}}}}}, "r": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1.4142135623730951}}, "df": 3}, "f": {"docs": {"dtools.containers.box": {"tf": 2}, "dtools.containers.box.Box": {"tf": 2}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 22}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}}, "df": 6}}}}, "f": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 2}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 14, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.map": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 17, "a": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple": {"tf": 2}}, "df": 2}}}, "p": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}}, "df": 6}, "l": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}}, "df": 6, "s": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "i": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1, "n": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}}, "df": 17, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}}, "df": 3, "s": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor": {"tf": 1.7320508075688772}}, "df": 5, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 6}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.7320508075688772}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}}, "df": 17}, "t": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "m": {"docs": {"dtools.containers.box": {"tf": 2}, "dtools.containers.box.Box": {"tf": 2}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.box.Box.put": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 2, "s": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.7320508075688772}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.maybe.MayBe.sequence": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 5}}, "f": {"docs": {"dtools.containers.box.Box.get": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.pop": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe": {"tf": 2}, "dtools.containers.maybe.MayBe.get": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.get": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.get_left": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.get_right": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 2.23606797749979}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 16}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}, "n": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_right": {"tf": 1}}, "df": 6}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}}, "df": 6}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.bind": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1.4142135623730951}}, "df": 16}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 3}}, "n": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.push": {"tf": 1.4142135623730951}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}}, "df": 10}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 5, "s": {"docs": {"dtools.containers.maybe": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.bind_except": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.immutable_list": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.xor.Xor": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"dtools.containers.box": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}}, "df": 2, "s": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.functional_tuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.copy": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.map_except": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.failable_call": {"tf": 1}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.get_right": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.sequence": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 20}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor": {"tf": 2.23606797749979}, "dtools.containers.xor.Xor.get": {"tf": 1}, "dtools.containers.xor.Xor.get_left": {"tf": 1}, "dtools.containers.xor.Xor.get_right": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 2}, "dtools.containers.xor.Xor.bind_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.sequence": {"tf": 1.4142135623730951}}, "df": 14}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1, "s": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1.4142135623730951}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 2}}, "df": 13}, "n": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1, "e": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.xor.Xor": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {"dtools.containers.box.Box.map": {"tf": 1}, "dtools.containers.box.Box.bind": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 1}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 6}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}, "e": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"dtools.containers.box.Box.pop": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.xor.Xor.bind_except": {"tf": 1}}, "df": 1, "d": {"docs": {"dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.xor.Xor": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.xor.Xor.bind": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"dtools.containers.box.Box.put": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"dtools.containers.box.Box.push": {"tf": 1}}, "df": 1}}, "t": {"docs": {"dtools.containers.box.Box.put": {"tf": 1}}, "df": 1}}}, "v": {"docs": {"dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers": {"tf": 1.7320508075688772}, "dtools.containers.box.Box.get": {"tf": 2}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1.7320508075688772}, "dtools.containers.functional_tuple.FunctionalTuple.accummulate": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1.7320508075688772}, "dtools.containers.immutable_list.ImmutableList.accummulate": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 2.8284271247461903}, "dtools.containers.maybe.MayBe.get": {"tf": 2}, "dtools.containers.maybe.MayBe.failable_index": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 2.23606797749979}, "dtools.containers.xor.Xor.get": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.get_left": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.get_right": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.map": {"tf": 1}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 21, "s": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.maybe.MayBe.sequence": {"tf": 1.4142135623730951}, "dtools.containers.xor.Xor": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.bind": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers.box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box": {"tf": 1.4142135623730951}, "dtools.containers.box.Box.get": {"tf": 1}, "dtools.containers.box.Box.pop": {"tf": 1}, "dtools.containers.box.Box.push": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldl": {"tf": 1}, "dtools.containers.functional_tuple.FunctionalTuple.foldr": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldl": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList.foldr": {"tf": 1}, "dtools.containers.maybe.MayBe": {"tf": 1}, "dtools.containers.maybe.MayBe.get": {"tf": 1}, "dtools.containers.xor.Xor.get": {"tf": 1}}, "df": 12}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"dtools.containers.immutable_list": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.xor.Xor.get_left": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"dtools.containers": {"tf": 1}, "dtools.containers.xor": {"tf": 1}, "dtools.containers.xor.Xor": {"tf": 2.8284271247461903}, "dtools.containers.xor.Xor.get": {"tf": 2}, "dtools.containers.xor.Xor.get_left": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.get_right": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.map_right": {"tf": 1}, "dtools.containers.xor.Xor.map_except": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.bind_except": {"tf": 1}, "dtools.containers.xor.Xor.sequence": {"tf": 1.7320508075688772}, "dtools.containers.xor.Xor.failable_call": {"tf": 1}, "dtools.containers.xor.Xor.failable_index": {"tf": 1}}, "df": 12, "[": {"docs": {}, "df": 0, "u": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 1}, "~": {"docs": {}, "df": 0, "u": {"docs": {"dtools.containers.xor.Xor.sequence": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.box": {"tf": 1}, "dtools.containers.box.Box": {"tf": 1}, "dtools.containers.maybe": {"tf": 1}, "dtools.containers.xor": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"dtools.containers.functional_tuple": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple": {"tf": 1}, "dtools.containers.immutable_list.ImmutableList": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"dtools.containers.functional_tuple.FunctionalTuple.bind": {"tf": 1.4142135623730951}, "dtools.containers.immutable_list.ImmutableList.bind": {"tf": 1.4142135623730951}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"dtools.containers.maybe.MayBe": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"dtools.containers.xor.Xor.map_except": {"tf": 1}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();